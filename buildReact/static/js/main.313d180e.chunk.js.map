{"version":3,"sources":["assets/smart.png","assets/ambev.png","pages/mainscreen/MainScreen.js","pages/operatorScreen/index.js","pages/maquinaScreen/MaquinaScreen.js","pages/addScreen/index.js","pages/csvScreen/index.js","pages/infoScreen/index.js","pages/editScreen/index.js","pages/resultScreen/index.js","pages/loginScreen/index.js","pages/clScreen/index.js","pages/statisticScreen/index.js","utils/PrivateRoute.js","pages/registerScreen/index.js","pages/operatorsEditScreen/index.js","pages/addOperatorScreen/index.js","pages/csv5wScreen/index.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MainScreen","handlerButtonClick","screen","window","open","className","src","smart","alt","Button","onClick","variant","size","ambev","OperatorScreen","useState","operators","setOperators","fetchOperators","useCallback","a","field","sessionStorage","getItem","fetch","headers","method","response","json","data","console","log","id","useEffect","InputGroup","Prepend","FormControl","placeholder","aria-label","Table","hover","responsive","bordered","length","map","value","index","name","userId","admin","onPressDelete","MaquinaScreen","fetchMachine","setMachines","machines","search","setSearch","onPressTable","period","frequency","status","onChange","e","target","filter","indexOf","valor","indice","key","w","onPressEdit","href","download","AddScreen","procedures","body","JSON","stringify","close","cont","useRef","setProcedures","setPeriod","setFrequency","setName","setField","current","quant","setQuant","Form","Group","controlId","Label","Control","type","as","custom","aux","array","arrayProcedures","pop","event","item","location","description","point","condition","Csv","fileSelect","progresso","setProgresso","loading","setLoading","file","setFile","FormData","append","File","bsPrefix","FormFile","bsCustomPrefix","Input","accept","files","labels","innerText","ref","Append","click","ProgressBar","animated","label","now","InfoScreen","opener","ListGroup","Item","active","EditScreen","date","setDate","typeEquip","setTypeEquip","dataWindow","i","Date","getFullYear","getMonth","getDate","ResultScreen","whys","setWhys","initialDate","setInitialDate","finalDate","setFinalDate","setId","searchPress","setSearchPress","handlerSearchButton","idDelete","arrayDelele","Accordion","defaultActiveKey","Card","Header","Toggle","eventKey","handlerDeleteButton","Collapse","Body","shift","tag","equip","descriptionAnomaly","corrective","maintenanceOrder","number","cause","deterioration","comment","maintenanceNotes","LoginScreen","setUserId","password","setPassword","history","useHistory","removeItem","responseJson","isAdm","setItem","replace","to","withRouter","useMemo","fetchField","checks","setChecks","nome","setNome","responseData","push","machineName","report","horizontal","checked","color","StatisticScreen","setTotalItens","itensDone","setItensDone","monthly","setMonthly","diary","setDiary","weekly","setWeekly","biweekly","setBiweekly","mounth","setMounth","years","setYears","year","setYear","chartRef","MOUNTHS","MOUNTHSBYNUMBER","Janeiro","Fevereiro","Mar√ßo","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro","todayDate","RenderMounth","fullYear","Number","yearsDiff","yearAux","yearsArray","sumItens","itensDoneSum","responseArray","diaryMachine","dateMachine","monthMachine","dayMachine","todayMonth","d","countItens","weeklyMachine","Math","floor","biWeeklyMachine","itensDontDone","Chart","datasets","backgroundColor","fetchDate","days","countChecked","PrivateRoute","children","auth","render","pathname","state","from","RegisterScreen","userCreated","setUserName","show","setShow","fields","createUser","Promise","resolve","reject","setTimeout","Error","then","Modal","closeButton","Title","Footer","OperatorsEditScreen","setAdmin","OperatorsAddScreen","Csv5w","Routes","path","exact","component","App","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.313d180e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/smart.0e5bd4db.png\";","module.exports = __webpack_public_path__ + \"static/media/ambev.ce645d6e.png\";","import React from 'react';\r\nimport './styles.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport smart from './../../assets/smart.png'\r\nimport ambev from './../../assets/ambev.png'\r\n\r\nfunction MainScreen() {\r\n  function handlerButtonClick(screen){\r\n    if(screen === \"result\"){\r\n      window.open('http://54.158.219.128:80/Result');\r\n    }\r\n    if(screen ==='operario'){\r\n      window.open('http://54.158.219.128:80/operator');\r\n    }else if(screen ==='maquina'){\r\n      window.open('http://54.158.219.128:80/Maquinas');\r\n    }else if(screen === 'cl'){\r\n      window.open('http://54.158.219.128:80/Cl');\r\n    }\r\n  }\r\n  return (\r\n    <body>\r\n      <div className=\"header\">\r\n      <img className=\"image\"  src={smart} alt=\"smartMaitenance\"/>\r\n        \r\n      </div>\r\n      <div className=\"buttonsMainScreen\">\r\n         <Button onClick={()=>{handlerButtonClick('maquina')}} variant=\"outline-primary\" size=\"lg\">Cadastro de checks</Button>{' '}\r\n        \r\n         <Button onClick={()=>{handlerButtonClick('operario')}} variant=\"outline-primary\" size=\"lg\">Operadores</Button>\r\n        \r\n        <Button onClick={()=>{handlerButtonClick('cl')}} variant=\"outline-primary\" size=\"lg\">Limpeza e inspe√ß√£o</Button>\r\n        <Button onClick={()=>{handlerButtonClick('result')}} variant=\"outline-primary\" size=\"lg\">5W</Button>{' '}\r\n      </div>\r\n     \r\n       \r\n          \r\n  \r\n          <div className=\"footer\">\r\n      \r\n            <img className=\"imageAmbev\"  src={ambev} alt=\"smartMaitenance\"/>\r\n         \r\n          </div>\r\n     \r\n\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default MainScreen;\r\n","import React,{useEffect,useState,useCallback} from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport Table from 'react-bootstrap/Table'\r\nimport \"./styles.css\"\r\nexport default function OperatorScreen(){\r\n    const [operators,setOperators] = useState([])\r\n    const fetchOperators = useCallback(async ()=>{\r\n        const field = sessionStorage.getItem('field');\r\n        const response = await fetch(`http://54.158.219.128:3333/users/index?field=${field}`,{\r\n        headers:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method:'GET',\r\n    })\r\n        const data = await response.json();\r\n        setOperators(data);\r\n        console.log(data);\r\n    },[]);\r\n    function attTable(){\r\n        fetchOperators();\r\n    }\r\n    useEffect(()=>{\r\n        fetchOperators();\r\n    },[fetchOperators])\r\n    function onPressEdit(data){\r\n        var w = window.open('http://54.158.219.128:80/operatoredit',\"name\",\"width=800,height=500\");\r\n        w.data = data;\r\n       \r\n    }\r\n    async function onPressDelete(id){\r\n        await fetch(`http://54.158.219.128:3333/users/delete/${id}`,{\r\n\r\n        headers:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method:'delete',\r\n    })\r\n       \r\n        fetchOperators();\r\n        \r\n    }\r\n    function addHandler(){\r\n        var w = window.open('http://54.158.219.128:80/operatoradd',\"name\",\"width=800,height=500\");\r\n    }\r\n    return(\r\n        <html>\r\n        <body>\r\n            <div  className=\"space\">\r\n                \r\n\r\n\r\n\r\n\r\n            </div>\r\n           \r\n            <div className=\"tableDiv\">\r\n                 <div>\r\n                 <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Prepend>\r\n                        <Button variant=\"primary\" size=\"sm\">Pesquisar</Button>{' '}\r\n                    </InputGroup.Prepend>\r\n                             <FormControl\r\n                                 placeholder=\"Digite um nome ou ID\"\r\n                                 aria-label=\"Operario\"\r\n                                 //aria-describedby=\"basic-addon1\"\r\n                                />\r\n                             </InputGroup>\r\n                    \r\n                 </div>\r\n                \r\n                 <div className=\"Table\" >\r\n                 <div className=\"AddAndCsvButtons\">\r\n                        <Button variant=\"primary\" onClick={addHandler} size=\"sm\">+</Button>{' '}\r\n                        {\r\n                           // <Button variant=\"primary\" size=\"sm\">CSV</Button>{' '}\r\n                            }\r\n                        <Button onClick={attTable} variant=\"primary\" size=\"sm\">Atualizar</Button>{' '}\r\n                    </div>\r\n                <Table hover responsive bordered>\r\n                   <thead>\r\n                        <tr>\r\n                           <th>#</th>\r\n                           <th>Nome</th>\r\n                           <th>ID</th>\r\n                           <th>Administrador</th>\r\n                           <th>Op√ß√µes</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {operators.length>0 && operators.map((value,index)=>\r\n                    <tr onClick={()=>{console.log('clicou')}}>\r\n                        <td>{index}</td>\r\n                        <td>{value.name}</td>\r\n                        <td>{value.userId}</td>\r\n                        <td>{value.admin ? \"sim\" : \"n√£o\"}</td>\r\n                        <td>\r\n                            <Button className=\"deleteButton\" onClick={()=>{onPressDelete(value[\"_id\"])}} variant=\"danger\" size=\"sm\">Excluir</Button>\r\n                            <Button onClick={()=>{onPressEdit(value)}} variant=\"info\" size=\"sm\">Editar</Button>\r\n                        </td>\r\n                    </tr>)}\r\n                    \r\n                </tbody>\r\n                    \r\n                \r\n                </Table>\r\n                    \r\n                </div>\r\n\r\n            </div>\r\n\r\n        </body>\r\n        </html>\r\n    )\r\n}","import React,{useEffect,useState} from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport Table from 'react-bootstrap/Table'\r\nimport \"./styles.css\";\r\nconst field = sessionStorage.getItem('field');\r\nexport default function MaquinaScreen(){\r\n    const fetchMachine = async ()=>{\r\n        \r\n        const response = await fetch(`http://54.158.219.128:3333/machines/index?field=${field}`,{\r\n        headers:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method:'GET',\r\n    })\r\n        const data = await response.json();\r\n        setMachines(data);\r\n        console.log(data);\r\n    }\r\n    function attTable(){\r\n        fetchMachine();\r\n    }\r\n    const [machines,setMachines] = useState([]);\r\n    const [search,setSearch] = useState('');\r\n    useEffect(()=>{  \r\n        fetchMachine();\r\n    },[])\r\n    function onPressTable(name,period,frequency){\r\n        window.open('http://54.158.219.128:80/Info',name,\"width=800,height=800\");\r\n        window.data = {period,frequency};\r\n       \r\n    }\r\n    function onPressEdit(name,period,frequency){\r\n        var w = window.open('http://54.158.219.128:80/edit',name,\"width=800,height=800\");\r\n        window.data = {period,frequency};\r\n        w.data = {period,frequency};\r\n       \r\n    }\r\n   \r\n    async function onPressDelete(name,period,frequency){\r\n        var response = await fetch(`http://54.158.219.128:3333/machines/delete?name=${name}&period=${period}&frequency=${frequency}`,{\r\n\r\n        headers:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method:'GET',\r\n    })\r\n    console.log(name);\r\n    console.log(response.status);\r\n       // if(response.status===200){\r\n            fetchMachine();\r\n        //}\r\n    }\r\n    function onPressAdd(){\r\n        window.open('http://54.158.219.128:80/add',\"Adicionar\",\"width=800,height=800\");\r\n\r\n    }\r\n    function onPressCsv(){\r\n       \r\n        window.open('http://54.158.219.128:80/csv',\"Adicionar\",\"width=800,height=800\");\r\n    }\r\n    return(\r\n      \r\n           \r\n          <>\r\n                <div  className=\"space\">\r\n                \r\n\r\n\r\n\r\n\r\n            </div>\r\n           \r\n            <div className=\"tableDiv\">\r\n                 <div>\r\n                 <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Prepend>\r\n                        <Button variant=\"primary\" size=\"sm\">Pesquisar</Button>{' '}\r\n                    </InputGroup.Prepend>\r\n                             <FormControl \r\n                                 onChange={(e)=>{setSearch(e.target.value)}}\r\n                                 placeholder=\"Digite uma m√°quina\"\r\n                                 aria-label=\"Maquina\"\r\n                                 //aria-describedby=\"basic-addon1\"\r\n                                />\r\n                             </InputGroup>\r\n                    \r\n                 </div>\r\n                \r\n                 <div className=\"Table\" >\r\n                 <div className=\"AddAndCsvButtons\">\r\n                        \r\n                        <Button onClick={onPressAdd} variant=\"primary\" size=\"sm\">+</Button>{' '}\r\n                        <Button onClick={onPressCsv} variant=\"secondary\" size=\"sm\">CSV</Button>{' '}\r\n                        <Button onClick={attTable} variant=\"primary\" size=\"sm\">Atualizar</Button>{' '}\r\n                    </div>\r\n                    <Table hover responsive bordered>\r\n                   <thead>\r\n                        <tr>\r\n                           <th>#</th>\r\n                           <th>Nome</th>\r\n                           <th>√Årea</th>\r\n                           <th>Per√≠odo</th>\r\n                           <th>Turnos</th>\r\n                           \r\n                           <th>Op√ß√µes</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {machines.filter((value)=>search ? (value.name.indexOf(search)===0) : true).map((valor,indice)=>(\r\n                        <tr key={indice}>\r\n                        <td onClick={()=>onPressTable(valor.name,valor.period,valor.frequency)} >{indice}</td>\r\n                        <td onClick={()=>onPressTable(valor.name,valor.period,valor.frequency)}>{valor.name}</td>\r\n                        <td onClick={()=>onPressTable(valor.name,valor.period,valor.frequency)}>{valor.field}</td>\r\n                        <td onClick={()=>onPressTable(valor.name,valor.period,valor.frequency)}>{valor.period}</td>\r\n                        <td onClick={()=>onPressTable(valor.name,valor.period,valor.frequency)}>{valor.frequency}</td>\r\n                        \r\n\r\n                        <td className=\"tableButtons\">\r\n                            \r\n                                <Button className=\"deleteButton\" onClick={()=>{onPressDelete(valor.name,valor.period,valor.frequency)}} variant=\"danger\" size=\"sm\">Excluir</Button>\r\n                                <Button onClick={()=>{onPressEdit(valor.name,valor.period,valor.frequency)}} variant=\"info\" size=\"sm\">Editar</Button>\r\n                                <a href={`http://54.158.219.128:3333/backup?name=${valor.name}&type=checks&field=${field}`} download>\r\n                                    <Button  variant=\"secondary\" size=\"sm\">Exportar CSV</Button>\r\n                                </a>\r\n                            \r\n                        </td>\r\n                    </tr> \r\n                    )\r\n\r\n                    )}\r\n                    \r\n                </tbody>\r\n                    \r\n                \r\n                </Table>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"color\">\r\n\r\n\r\n                \r\n            </div>\r\n    </>\r\n     \r\n    \r\n    )\r\n}","import React,{useState,useRef} from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport './styles.css'\r\n\r\nexport default function AddScreen(){\r\n    async function addMachine(){\r\n        \r\n        const data = {name,procedures,field,frequency,period};\r\n        console.log(data);\r\n        console.log(procedures);\r\n        const response = await fetch(\"http://54.158.219.128:3333/machines/create\",{\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method:'POST',\r\n            body:JSON.stringify(data),\r\n        })\r\n        console.log(await response.json());\r\n        if(response.status===200){\r\n            window.close();\r\n        }\r\n    }\r\n    var cont = useRef(0);\r\n    const [procedures,setProcedures] = useState([{}]);\r\n    const [period,setPeriod] = useState('di√°rio');\r\n    const [frequency,setFrequency] = useState();\r\n    const [name,setName] = useState('');\r\n    const [field,setField] = useState(\"Meio ambiente\");\r\n    \r\n    const [quant,setQuant] = useState([cont.current]);\r\n    \r\n    function addProcedure(){ \r\n        var aux            \r\n        aux = cont.current+1;\r\n        cont.current = cont.current+1;\r\n        setQuant([...quant,aux]);\r\n        setProcedures([...procedures,{}]);\r\n        \r\n    }\r\n    function removeProcedure(){\r\n        var array = [...quant];\r\n        var arrayProcedures= [...procedures];\r\n        if(cont.current>0){\r\n            array.pop();\r\n            arrayProcedures.pop();\r\n            setQuant(array);\r\n            setProcedures(arrayProcedures);\r\n            cont.current = cont.current-1;\r\n        }\r\n        \r\n    }\r\n    return (\r\n    <div>\r\n        <Form>\r\n            <Form.Group controlId=\"name\">\r\n                <Form.Label>Digite o nome da m√°quina</Form.Label>\r\n                <Form.Control onChange={(e)=>{setName(e.target.value)}} type=\"text\" placeholder=\"Nome\"/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"name\">                \r\n            <Form.Control value={period} onChange={(e)=>{console.log(e.target.value);setPeriod(e.target.value)}} as=\"select\" custom> \r\n                <Form.Label >Escolha o per√≠odo</Form.Label>                          \r\n                            <option>di√°rio</option> \r\n                            <option>semanal</option>\r\n                            <option>quinzenal</option>\r\n                            <option>mensal</option>\r\n                            \r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"name\">\r\n                <Form.Label>Digite a quantidade de turnos</Form.Label>\r\n                <Form.Control value={frequency} onChange={(e)=>{setFrequency(e.target.value)}} type=\"text\" placeholder=\"Nome\"/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"name\">                \r\n            <Form.Control value={field} onChange={(e)=>{console.log(e.target.value);setField(e.target.value)}} as=\"select\" custom> \r\n                <Form.Label >Escolha a √°rea</Form.Label>                          \r\n                            <option>Meio ambiente</option> \r\n                            <option>BBlend</option>\r\n                            <option>Packaging 501</option>\r\n                            <option>Packaging 502</option>\r\n                            <option>Packaging 503</option>\r\n                            <option>Packaging 511</option>\r\n                            <option>Packaging 512</option>\r\n                            <option>Packaging 561</option> \r\n                            <option>Packaging 562</option> \r\n                            <option>Processo cerveja</option>\r\n                            <option>Utilidades</option> \r\n                            <option>Xaroparia</option> \r\n                            <option>Engenharia</option>\r\n                            <option>testArea</option>\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <p>Use os bot√µes para adicionar ou remover procedimentos</p>\r\n            <div className=\"buttonsAddandRemove\">\r\n                \r\n                <Button onClick={addProcedure} variant=\"primary\" size=\"lg\">+</Button>{' '}\r\n                <Button onClick={removeProcedure} variant=\"primary\" size=\"lg\">-</Button>{' '}\r\n            </div>\r\n            {quant.map((valor,index)=>\r\n            <div key={index}>\r\n                {`Procedimento ${index}:`}\r\n                <Form.Group className=\"formInicio\" controlId=\"name\">\r\n                    <Form.Label>Digite o item do procedimento</Form.Label>\r\n                    <Form.Control onChange={(event)=>{\r\n                        console.log(event.target.value)\r\n                        var array = [];\r\n                        array = [...procedures];\r\n                        array[index].item = event.target.value;\r\n                        setProcedures(array);\r\n                    }} type=\"text\" placeholder=\"Nome\"/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Digite a localiza√ß√£o do procedimento</Form.Label>\r\n                    <Form.Control onChange={(event)=>{\r\n                        var array = [];\r\n                        array = [...procedures];\r\n                        array[index].location = event.target.value;\r\n                        setProcedures(array);\r\n                    }}  type=\"text\" placeholder=\"Nome\"/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Digite a descri√ß√£o do procedimento</Form.Label>\r\n                    <Form.Control onChange={(event)=>{\r\n                        var array = [];\r\n                        array = [...procedures];\r\n                        array[index].description = event.target.value;\r\n                        setProcedures(array);\r\n                    }}  type=\"text\" placeholder=\"Nome\"/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Digite o ponto do procedimento</Form.Label>\r\n                    <Form.Control onChange={(event)=>{\r\n                        var array = [];\r\n                        array = [...procedures];\r\n                        array[index].point = event.target.value;\r\n                        setProcedures(array);\r\n                    }}  type=\"\" placeholder=\"Nome\"/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Digite o metodo do procedimento</Form.Label>\r\n                    <Form.Control onChange={(event)=>{\r\n                        var array = [];\r\n                        array = [...procedures];\r\n                        array[index].method = event.target.value;\r\n                        setProcedures(array);\r\n                    }}  type=\"text\" placeholder=\"Nome\"/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Digite a condi√ß√£o da m√°quina</Form.Label>\r\n                    <Form.Control onChange={(event)=>{\r\n                        var array = [];\r\n                        array = [...procedures];\r\n                        array[index].condition = event.target.value;\r\n                        setProcedures(array);\r\n                    }}  type=\"text\" placeholder=\"Nome\"/>\r\n                </Form.Group>\r\n            </div>\r\n            \r\n            )}\r\n            <Button onClick={addMachine} variant=\"primary\" size=\"sm\">Adicionar</Button>{' '}\r\n        </Form>\r\n    </div>)\r\n\r\n\r\n}","import React,{useState,useRef} from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport FormFile from 'react-bootstrap/FormFile'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport Form from 'react-bootstrap/Form';\r\nimport './styles.css'\r\nexport default function Csv(){\r\n    const fileSelect = useRef();\r\n    const [progresso,setProgresso] = useState(0);\r\n    const [loading,setLoading] = useState(false);\r\n    const [file,setFile] = useState(0);\r\n    const [field,setField] = useState(\"Meio ambiente\");\r\n    async function fetchData(){\r\n        setLoading(true);\r\n        setProgresso(30)\r\n        const data = new FormData();\r\n        data.append('csv',file);\r\n        console.log(file.type);\r\n        setProgresso(progresso+50);\r\n        //fazer uma promessa para setar um valor de tempo para a req\r\n        const response = await fetch(`http://54.158.219.128:3333/fileupload/?field=${field}`,{\r\n            method:\"POST\",\r\n            \r\n            body:data,\r\n        })\r\n        if(response.status===200){\r\n            setProgresso(100);\r\n        }else{\r\n            setProgresso(80);\r\n            //colocar erro\r\n        }\r\n        console.log(await response.json());\r\n    }\r\n    \r\n    \r\n    const [name,setName] = useState('Arquivo.csv');\r\n     \r\n    return(\r\n        \r\n        <div>\r\n            <Form name=\"csv\">\r\n            <Form.Group controlId=\"vlabel\">\r\n                <InputGroup  className=\"mb-3\">\r\n                \r\n                            <InputGroup.Prepend >\r\n                           \r\n                                <Button   variant=\"primary\">Arquivo</Button>\r\n                   \r\n                            </InputGroup.Prepend>\r\n                        \r\n                            \r\n                            <Form.File \r\n                            \r\n                            name=\"csv\"\r\n                            className=\"vlabel\"\r\n                            bsPrefix=\"vlabel\"\r\n                            custom \r\n                            >  \r\n                                    <FormFile.Label name='csv'  bsCustomPrefix=\"vvlabel\" className=\"vvlabel\" >{name}</FormFile.Label>\r\n                                    <Form.File.Input \r\n                                    name=\"csv\"\r\n                                    accept=\".csv\" \r\n                                    onChange={(e)=>{\r\n                                        setName(e.target.files[0].name);\r\n                                        setFile(e.target.files[0]);\r\n                                        fileSelect.current.labels[0].innerText=e.target.files[0].name;\r\n                                        }} \r\n                                    ref={fileSelect}/>\r\n                                    \r\n                               \r\n                            </Form.File>\r\n                            <InputGroup.Append>\r\n                                <Button onClick={()=>fileSelect.current.click()} variant=\"outline-primary\">...</Button>\r\n                             </InputGroup.Append>\r\n                                \r\n                              \r\n                           \r\n                        \r\n                           \r\n                            \r\n                        \r\n                        </InputGroup>\r\n          </Form.Group>\r\n\r\n                    \r\n            </Form>\r\n        <Form>\r\n        \r\n      <Form.Group controlId=\"name\">\r\n        <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                           \r\n                        <Button variant=\"primary\">√Årea</Button>\r\n                            \r\n                    </InputGroup.Prepend>\r\n            <Form.Control value={field} onChange={(e)=>{console.log(e.target.value);setField(e.target.value)}} as=\"select\" custom> \r\n                                  \r\n                            <option> Meio ambiente </option> \r\n                            <option> BBlend </option>\r\n                            <option> Packaging 501  </option>\r\n                            <option> Packaging 502 </option>\r\n                            <option> Packaging 503  </option>\r\n                            <option> Packaging 511  </option>\r\n                            <option> Packaging 512  </option>\r\n                            <option> Packaging 561 </option> \r\n                            <option> Packaging 562 </option> \r\n                            <option> Processo cerveja  </option>\r\n                            <option> Utilidades </option> \r\n                            <option> Xaroparia </option> \r\n                            <option>Engenharia</option>\r\n                            <option>testArea</option>\r\n                </Form.Control>\r\n            \r\n          </InputGroup>\r\n        </Form.Group>\r\n        </Form>\r\n        <Button onClick={fetchData}  variant=\"primary\">Importar</Button>\r\n        {loading && <ProgressBar className=\"barraProgresso\" animated label={`${progresso}%`} now={progresso} />}\r\n\r\n\r\n        </div>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nexport default function InfoScreen(){\r\n    const [name,setName] = useState(window.name);\r\n    const [field,setField] = useState('');\r\n    const [procedures,setProcedures] = useState([]);\r\n    \r\n\r\n    \r\n        useEffect(()=>{\r\n            const fetchMachine = async ()=>{\r\n                console.log(window.name);\r\n                const response =\r\n                await fetch(`http://54.158.219.128:3333/machines/find?name=${window.name}&period=${window.opener.data.period}&frequency=${window.opener.data.frequency}`,{\r\n                headers:{\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method:'GET',\r\n            })\r\n                if(response.status===200){\r\n                     const data = await response.json();\r\n                     console.log(data.procedures);\r\n                     setName(data.name);\r\n                     setField(data.field);\r\n                     setProcedures(data.procedures);\r\n                     \r\n                     \r\n                }\r\n                \r\n                \r\n            }\r\n        \r\n            fetchMachine();\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        },[])\r\n        \r\n    return(\r\n        <ListGroup>\r\n            <ListGroup.Item>Nome: {name}</ListGroup.Item>\r\n            <ListGroup.Item>√Årea: {field}</ListGroup.Item>\r\n            <ListGroup.Item>\r\n            {procedures.map((value,index)=>(\r\n                <div key={index}>\r\n                <ListGroup.Item as={value.name} active> Procedimento: {index} </ListGroup.Item>\r\n                <ListGroup>\r\n                   \r\n                   <ListGroup.Item>Item: {value.item} </ListGroup.Item>\r\n                   <ListGroup.Item>Descri√ß√£o: {value.description}</ListGroup.Item>\r\n                   <ListGroup.Item>M√©todo: {value.method}</ListGroup.Item>\r\n                   <ListGroup.Item>Localiza√ß√£o: {value.location}</ListGroup.Item>\r\n                   <ListGroup.Item>Pontos:  {value.point}</ListGroup.Item>\r\n                   <ListGroup.Item>Condi√ß√£o: {value.condition}</ListGroup.Item>\r\n                </ListGroup>\r\n                </div>\r\n                ))\r\n            }\r\n            </ListGroup.Item>\r\n            \r\n        </ListGroup>\r\n    )\r\n    \r\n}","import React,{useState,useRef,useEffect} from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport './styles.css'\r\n\r\nexport default function EditScreen(){\r\n    var cont = useRef(0);\r\n    const [name,setName] = useState(window.name);\r\n    const [date,setDate] = useState();\r\n    const [typeEquip,setTypeEquip] = useState();\r\n    const [period,setPeriod] = useState();\r\n    const [frequency,setFrequency] = useState();\r\n    const [procedures,setProcedures] = useState([{}]);\r\n    const [field,setField] = useState(''); \r\n    const [quant,setQuant] = useState([]);\r\n    useEffect(()=>{\r\n        const fetchMachine = async ()=>{\r\n            const dataWindow = window.opener.data;\r\n            console.log(dataWindow)\r\n            const response = await fetch(`http://54.158.219.128:3333/machines/find?name=${window.name}&period=${dataWindow.period}&frequency=${dataWindow.frequency}`,{\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method:'GET',\r\n        })\r\n            if(response.status===200){\r\n                 \r\n                 var array = [];\r\n                 const data = await response.json();\r\n                 console.log(data);\r\n                 console.log(data.procedures.length);\r\n                 cont.current = (data.procedures.length-1);\r\n                 setProcedures(data.procedures);\r\n                 for(var i =0;i<=cont.current;i++){\r\n                    array[i] = i;\r\n                 }\r\n                 var date = new Date(data.date);\r\n\r\n                 setQuant(array);\r\n                 setField(data.field);\r\n                 setPeriod(data.period);\r\n                 setFrequency(data.frequency);\r\n                 setDate(`${date.getFullYear()}-0${date.getMonth()+1}-${date.getDate()}`);\r\n                 setTypeEquip(data.typeEquip);\r\n            }\r\n            \r\n            \r\n        }\r\n    \r\n        fetchMachine();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n    async function updateMachine(){\r\n        const data = {name,procedures,field,frequency,period,date,typeEquip};\r\n        const response = await fetch(`http://54.158.219.128:3333/machines/modify?name=${window.name}&period=${window.opener.data.period}&frequency=${window.opener.data.frequency}` ,{\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method:'POST',\r\n            body:JSON.stringify(data),\r\n        })\r\n        console.log(await response.json());\r\n        if(await response.status===200){\r\n            window.close();\r\n        }\r\n    }\r\n    \r\n\r\n    \r\n    function addProcedure(){ \r\n        var aux            \r\n        aux = cont.current+1;\r\n        cont.current = cont.current+1;\r\n        setQuant([...quant,aux]);\r\n        setProcedures([...procedures,{}]);\r\n        \r\n    }\r\n    function removeProcedure(){\r\n        var array = [...quant];\r\n        var arrayProcedures= [...procedures];\r\n        if(cont.current>0){\r\n            array.pop();\r\n            arrayProcedures.pop();\r\n            setQuant(array);\r\n            setProcedures(arrayProcedures);\r\n            cont.current = cont.current-1;\r\n        }\r\n        \r\n    }\r\n    return (\r\n    <div>\r\n        <Form>\r\n            <Form.Group controlId=\"name\">\r\n                <Form.Label>Digite o nome da m√°quina</Form.Label>\r\n                <Form.Control value={name} onChange={(e)=>{setName(e.target.value)}} type=\"text\" placeholder=\"Nome\"/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"name\">                \r\n            <Form.Control value={period} onChange={(e)=>{console.log(e.target.value);setPeriod(e.target.value)}} as=\"select\" custom> \r\n                <Form.Label >Escolha o per√≠odo</Form.Label>                          \r\n                            <option>di√°rio</option> \r\n                            <option>semanal</option>\r\n                            <option>quinzenal</option>\r\n                            <option>mensal</option>\r\n                            \r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"name\">\r\n                <Form.Label>Digite a quantidade de turnos</Form.Label>\r\n                <Form.Control value={frequency} onChange={(e)=>{setFrequency(e.target.value)}} type=\"text\" placeholder=\"Nome\"/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"name\">\r\n                <Form.Label>Digite o tipo do equipamento</Form.Label>\r\n                <Form.Control value={typeEquip} onChange={(e)=>{setTypeEquip(e.target.value)}} type=\"text\" placeholder=\"Tipo de equipamento\"/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"name\">\r\n                        <Form.Label>Defina a data de in√≠cio</Form.Label>\r\n                        <Form.Control value={date} onChange={(e)=>setDate(e.target.value)} type=\"date\">\r\n\r\n                        </Form.Control>\r\n                </Form.Group> \r\n            <Form.Group controlId=\"name\">   \r\n                <Form.Label >Escolha a √°rea</Form.Label>              \r\n                <Form.Control value={field} onChange={(e)=>{console.log(e.target.value);setField(e.target.value)}} as=\"select\" custom> \r\n                                         \r\n                            <option> Meio ambiente </option> \r\n                            <option> BBlend </option>\r\n                            <option> Packaging 501  </option>\r\n                            <option> Packaging 502 </option>\r\n                            <option> Packaging 503  </option>\r\n                            <option> Packaging 511  </option>\r\n                            <option> Packaging 512  </option>\r\n                            <option> Packaging 561 </option> \r\n                            <option> Packaging 562 </option> \r\n                            <option> Processo cerveja  </option>\r\n                            <option> Utilidades </option> \r\n                            <option> Xaroparia </option> \r\n                            <option>Engenharia</option>\r\n                            <option>testArea</option>\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <p>Use os bot√µes para adicionar ou remover procedimentos</p>\r\n            <div className=\"buttonsAddandRemove\">\r\n                \r\n                <Button onClick={addProcedure} variant=\"primary\" size=\"lg\">+</Button>{' '}\r\n                <Button onClick={removeProcedure} variant=\"primary\" size=\"lg\">-</Button>{' '}\r\n            </div>\r\n            {quant.map((valor,index)=>\r\n            <div key={index}>\r\n                {`Procedimento ${index}:`}\r\n                <Form.Group className=\"formInicio\" controlId=\"name\">\r\n                    <Form.Label>Digite o item da m√°quina</Form.Label>\r\n                    <Form.Control value={procedures[index].item} onChange={(event)=>{\r\n                        console.log(event.target.value)\r\n                        var array = [];\r\n                        array = [...procedures];\r\n                        array[index].item = event.target.value;\r\n                        setProcedures(array);\r\n                    }} type=\"text\" placeholder=\"Nome\"/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Digite o location da m√°quina</Form.Label>\r\n                    <Form.Control value={procedures[index].location} onChange={(event)=>{\r\n                        var array = [];\r\n                        array = [...procedures];\r\n                        array[index].location = event.target.value;\r\n                        setProcedures(array);\r\n                    }}  type=\"text\" placeholder=\"Nome\"/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Digite o descri√ß√£o da m√°quina</Form.Label>\r\n                    <Form.Control value={procedures[index].description} onChange={(event)=>{\r\n                        var array = [];\r\n                        array = [...procedures];\r\n                        array[index].description = event.target.value;\r\n                        setProcedures(array);\r\n                    }}  type=\"text\" placeholder=\"Nome\"/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Digite o point da m√°quina</Form.Label>\r\n                    <Form.Control value={procedures[index].point} onChange={(event)=>{\r\n                        var array = [];\r\n                        array = [...procedures];\r\n                        array[index].point = event.target.value;\r\n                        setProcedures(array);\r\n                    }}  type=\"text\" placeholder=\"Nome\"/>\r\n                </Form.Group>\r\n                <Form.Group className='textField' controlId=\"name\">\r\n                    <Form.Label>Digite o metodo da m√°quina</Form.Label>\r\n                    <Form.Control as=\"textarea\" value={procedures[index].method} onChange={(event)=>{\r\n                        var array = [];\r\n                        array = [...procedures];\r\n                        array[index].method = event.target.value;\r\n                        setProcedures(array);\r\n                    }}  type=\"text\" placeholder=\"Nome\"/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Digite o condi√ß√£o da m√°quina</Form.Label>\r\n                    <Form.Control value={procedures[index].condition} onChange={(event)=>{\r\n                        var array = [];\r\n                        array = [...procedures];\r\n                        array[index].condition = event.target.value;\r\n                        setProcedures(array);\r\n                    }}  type=\"text\" placeholder=\"Nome\"/>\r\n                </Form.Group>\r\n            </div>\r\n            \r\n            )}\r\n            <Button onClick={updateMachine} variant=\"primary\" size=\"sm\">Alterar</Button>{' '}\r\n        </Form>\r\n    </div>)\r\n\r\n\r\n}","import React,{useState,useEffect} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport \"./styles.css\"\r\nexport default function ResultScreen(){\r\n\r\n    \r\n    \r\n    const [whys,setWhys] = useState([]);\r\n    const [initialDate,setInitialDate] = useState(new Date());\r\n    const [finalDate,setFinalDate] = useState(new Date());\r\n    const [id,setId] = useState('');\r\n    const [searchPress,setSearchPress] = useState(false);\r\n    const [field,setField] = useState(\"Meio ambiente\");\r\n\r\n    function onPressCsv(){\r\n       \r\n        window.open('http://54.158.219.128:80/csv5w',\"Adicionar\",\"width=800,height=800\");\r\n    }\r\n\r\n    async function handlerSearchButton(){\r\n        \r\n        const response = await fetch(\r\n            `http://54.158.219.128:3333/why/indexDates?initialDate=${initialDate}&finalDate=${finalDate}&id=${id}&field=${field}`\r\n            ,{\r\n        headers:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method:'GET',\r\n    });\r\n    const data = await response.json();\r\n    console.log(data.length)\r\n    if(data.length!==0 && response.status === 200){\r\n        setSearchPress(true);\r\n    }\r\n\r\n    console.log(data);\r\n    setWhys(data);\r\n    }\r\n    async function handlerDeleteButton(idDelete){\r\n        const response = await fetch(\r\n            `http://54.158.219.128:3333/why/delete/${idDelete}`\r\n            ,{\r\n        headers:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method:'DELETE',\r\n    });\r\n    const arrayDelele = whys.filter((value)=>value[\"_id\"]!==idDelete);\r\n    setWhys(arrayDelele);\r\n    console.log(await response.json());\r\n    handlerSearchButton();\r\n    }\r\n    return(\r\n        <div>\r\n            <Form>\r\n                <Form.Group>\r\n                <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                            <Button variant=\"primary\">ID</Button>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control placeholder=\"Deixe em branco para n√£o aplicar o filtro\" value={id} onChange={(e)=>setId(e.target.value)} type=\"text\">\r\n\r\n                        </Form.Control>\r\n                </InputGroup>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                            <Button variant=\"primary\">Data inicial</Button>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control value={initialDate} onChange={(e)=>setInitialDate(e.target.value)} type=\"date\">\r\n\r\n                        </Form.Control>\r\n                    </InputGroup>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                            <Button variant=\"primary\">Data final</Button>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control value={finalDate} onChange={(e)=>setFinalDate(e.target.value)} type=\"date\">\r\n\r\n                        </Form.Control>\r\n                    </InputGroup>\r\n                    <Form.Group controlId=\"name\">                \r\n            <Form.Control value={field} onChange={(e)=>{console.log(e.target.value);setField(e.target.value)}} as=\"select\" custom> \r\n                <Form.Label >Escolha a √°rea</Form.Label>                          \r\n                            <option> Meio ambiente </option> \r\n                            <option> BBlend </option>\r\n                            <option> Packaging 501  </option>\r\n                            <option> Packaging 502 </option>\r\n                            <option> Packaging 503  </option>\r\n                            <option> Packaging 511  </option>\r\n                            <option> Packaging 512  </option>\r\n                            <option> Packaging 561 </option> \r\n                            <option> Packaging 562 </option> \r\n                            <option> Processo cerveja </option>\r\n                            <option> Utilidades </option> \r\n                            <option> Xaroparia </option> \r\n                            <option>Engenharia</option>\r\n                            <option>testArea</option>\r\n                </Form.Control>\r\n            </Form.Group>\r\n                    <view className=\"buttonsView\">\r\n                        <Button onClick={handlerSearchButton} variant=\"primary\">Pesquisar</Button>\r\n                        <Button onClick={onPressCsv} variant=\"secondary\" size=\"sm\">Importar CSV</Button>{' '}\r\n                        <a href={`http://54.158.219.128:3333/backup?initialDate=${initialDate}&finalDate=${finalDate}&userId=${id}&field=${field}&type=5w`} download>\r\n                            <Button  variant=\"secondary\">Exportar CSV</Button>\r\n                            \r\n                        \r\n                        </a>\r\n                    </view>    \r\n                </Form.Group>\r\n            \r\n            </Form>\r\n            <Accordion defaultActiveKey=\"00\">\r\n                {searchPress && whys.map((value,index)=>\r\n                (\r\n                    <Card key={`${index}`} >\r\n                    <Card.Header>\r\n                        <div className=\"cardHeader\">\r\n                            <Accordion.Toggle eventKey={`${index}`} as={Button} variant=\"link\" >                              \r\n                                {value.userId}\r\n                            </Accordion.Toggle>\r\n                            <Button className=\"deleteButton\" onClick={()=>{handlerDeleteButton(value[\"_id\"])}} variant=\"danger\" size=\"sm\">Excluir</Button>\r\n                        </div>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey={`${index}`}>\r\n                        <Card.Body>   \r\n                              <p>Turno: {value.shift}</p>\r\n                              <p>TAG: {value.tag}</p>\r\n                              <p>Equipamento: {value.equip}</p>\r\n                              <p>Descri√ß√£o da anomalia: {value.descriptionAnomaly}</p>\r\n                              <p>Corre√ß√£o: {value.corrective}</p>\r\n                              <p>Ordem de manuten√ß√£o: {value.maintenanceOrder}</p>\r\n                              {value.whys.map((value,index)=><p key={`${index}`}>Porque {value.number}: {value.description}</p>)}                              \r\n                              <p>Causa: {value.cause}</p>\r\n                              <p>Deteriora√ß√£o: {value.deterioration}</p>\r\n                              <p>Coment√°rio: {value.comment}</p>\r\n                              <p>Notas de manuten√ß√£o: {value.maintenanceNotes}</p>\r\n                        </Card.Body>\r\n                        \r\n                    </Accordion.Collapse>\r\n                    \r\n                </Card>\r\n                ))}\r\n                \r\n            \r\n            </Accordion>\r\n\r\n\r\n        \r\n        \r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react';\r\nimport './styles.css';\r\nimport {useHistory,Link} from 'react-router-dom';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport smart from './../../assets/smart.png'\r\nimport ambev from './../../assets/ambev.png'\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport cookieObj from '../../utils/cookietoObject';\r\nfunction LoginScreen() {\r\n  const [userId,setUserId] = useState('');\r\n  const [field,setField] = useState(\"Meio ambiente\");\r\n  const [password,setPassword] = useState('');\r\n  \r\n  let history = useHistory();\r\n  async function handlerButtonLogin(){\r\n    sessionStorage.removeItem('admin');\r\n    \r\n    const data = {userId,password};\r\n    console.log(JSON.stringify(data))\r\n    const response = await fetch(`http://54.158.219.128:3333/session/login`,{\r\n    \r\n    headers:{     \r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n\r\n    },\r\n    //credentials:'include',\r\n    body: JSON.stringify(data),\r\n    method:'POST', \r\n    });\r\n    \r\n    if(response.status === 200){\r\n      var responseJson = await response.json();\r\n      const field = responseJson.field;\r\n      const isAdm = responseJson.admin;\r\n\r\n      //const cookieObject = cookieObj(document.cookie);\r\n      \r\n      \r\n      //console.log(cookieObject);\r\n      //if(cookieObject[1][\"admin\"]==\"true\"){\r\n        await sessionStorage.setItem('admin',`${isAdm}`);\r\n        await sessionStorage.setItem('field',field);\r\n        sessionStorage.setItem('userId',userId);\r\n        console.log(isAdm)\r\n        if(isAdm){\r\n          history.replace('/mainScreen');\r\n        }else{\r\n          window.location.href = 'http://54.158.219.128:80/mobileweb';\r\n          \r\n        }\r\n        console.log(response.headers);\r\n\r\n     // }else{\r\n        //colocar algo para mostrar q o usu√°rio n√£o possui authentica√ß√£o \r\n     // }\r\n    }else{\r\n      //colocar algo para mostrar que o usu√°rio n√£o existe\r\n    }\r\n\r\n  }\r\n  \r\n  return (\r\n    <body>\r\n      <div className=\"header\">\r\n      <img className=\"image\"  src={smart} alt=\"smartMaitenance\"/>\r\n        \r\n      </div>\r\n      <div className=\"inputsS\">\r\n        \r\n         <InputGroup className=\"input\" size=\"lg\">\r\n            <FormControl\r\n              placeholder=\"id\"\r\n              onChange={(e)=>{setUserId(e.target.value)}}\r\n              value={userId}\r\n            />\r\n          </InputGroup>\r\n          <InputGroup className=\"input\"size=\"lg\">\r\n            <FormControl\r\n              type=\"password\"\r\n              value={password}\r\n              placeholder=\"senha\"\r\n              onChange={(e)=>{setPassword(e.target.value)}}\r\n            />\r\n          </InputGroup>\r\n          <Button className=\"loginButton \"  onClick={handlerButtonLogin} variant=\"outline-primary\" size=\"lg\">Entrar</Button>\r\n          <Link to=\"/register\">Cadastre-se</Link>\r\n        {\r\n           //<Button onClick={()=>{handlerButtonClick('operario')}} variant=\"outline-primary\" size=\"lg\">Cadastro de operadores</Button>\r\n        } \r\n       \r\n      </div>\r\n     \r\n       \r\n          \r\n      <div className=\"button\">\r\n          <div className=\"footer\">\r\n      \r\n            <img className=\"imageAmbev\"  src={ambev} alt=\"smartMaitenance\"/>\r\n         \r\n          </div>\r\n     \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React,{useState,useEffect,useRef,useMemo} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport {AiOutlineCheckCircle,AiOutlineCloseCircle} from 'react-icons/ai'\r\nimport \"./styles.css\" \r\n//withRouter coloca o prop history que n√£o √© diretamente chamado dentro de router\r\nexport default withRouter (function ClScreen({history}){\r\n\r\n    \r\n    const field =  useMemo(()=>{\r\n         function fetchField(){\r\n             const field =  sessionStorage.getItem('field');\r\n             console.log(field);\r\n             return field;\r\n         }\r\n         return fetchField();\r\n    },[])\r\n    const [checks,setChecks] = useState([]);\r\n    const [initialDate,setInitialDate] = useState(new Date());\r\n    const [finalDate,setFinalDate] = useState(new Date());\r\n    const [nome,setNome] = useState('');\r\n    const [searchPress,setSearchPress] = useState(false);\r\n    async function handlerDeleteButton(idDelete){\r\n        const response = await fetch(\r\n            `http://54.158.219.128:3333/check/delete/${idDelete}`\r\n            ,{\r\n        headers:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method:'DELETE',\r\n    });\r\n    const arrayDelele = checks.filter((value)=>value[\"_id\"]!==idDelete);\r\n    setChecks(arrayDelele);\r\n    console.log(await response.json());\r\n    handlerSearchButton();\r\n    }\r\n\r\n\r\n    async function handlerSearchButton(){\r\n        const response = await fetch(\r\n            `http://54.158.219.128:3333/check/indexDates?initialDate=${initialDate}&finalDate=${finalDate}&name=${nome}&field=${field}`\r\n            ,{\r\n        headers:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method:'GET',\r\n    });\r\n    const responseData = await response.json();\r\n    const data = responseData.map((value)=>{value.date = new Date(value.date); return value})\r\n    console.log(data)\r\n    if(data.length!==0 && response.status === 200){\r\n        setSearchPress(true);\r\n    }\r\n\r\n    console.log(data);\r\n    setChecks(data);\r\n    }\r\n    function handlerStatisticButton(){\r\n        history.push('statistic');\r\n    }\r\n    /*async function handlerDeleteButton(idDelete){\r\n        const response = await fetch(\r\n            `http://54.158.219.128:3333/why/delete/${idDelete}`\r\n            ,{\r\n        headers:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method:'DELETE',\r\n    });\r\n    const arrayDelele = whys.filter((value)=>value[\"_id\"]!==idDelete);\r\n    setWhys(arrayDelele);\r\n    console.log(await response.json());\r\n    handlerSearchButton();\r\n    }*/\r\n    return(\r\n        <div>\r\n            <Form>\r\n                <Form.Group>\r\n                <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                            <Button variant=\"primary\">Nome</Button>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control placeholder=\"Deixe em branco para n√£o aplicar o filtro\" value={nome} onChange={(e)=>setNome(e.target.value)} type=\"text\">\r\n\r\n                        </Form.Control>\r\n                </InputGroup>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                            <Button variant=\"primary\">Data inicial</Button>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control value={initialDate} onChange={(e)=>setInitialDate(e.target.value)} type=\"date\">\r\n\r\n                        </Form.Control>\r\n                    </InputGroup>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                            <Button variant=\"primary\">Data final</Button>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control value={finalDate} onChange={(e)=>setFinalDate(e.target.value)} type=\"date\">\r\n\r\n                        </Form.Control>\r\n                    </InputGroup>\r\n                   \r\n                    \r\n                </Form.Group>\r\n                \r\n            \r\n            </Form>\r\n            <div className=\"buttonsStatistic\">\r\n                        <Button onClick={handlerSearchButton} variant=\"primary\">Pesquisar</Button>\r\n                        <Button onClick={handlerStatisticButton} variant=\"primary\">Estat√≠sticas</Button>\r\n             </div>\r\n            <Accordion defaultActiveKey=\"00\">\r\n                {searchPress && checks.map((value,index)=>\r\n                (\r\n                    <Card key={`${index}`} >\r\n                    <Card.Header>\r\n                        <div className=\"cardHeader\">\r\n                            <Accordion.Toggle eventKey={`${index}`} as={Button} variant=\"link\" >                              \r\n                                Nome da m√°quina: {value.machineName}<br/>\r\n                                Per√≠odo: {value.period}<br/>\r\n                                Turnos: {value.frequency}<br/>\r\n                                Data: {value.date.getDate()}/{value.date.getMonth()+1}/{value.date.getFullYear()}<br/>\r\n                            </Accordion.Toggle>\r\n                            <Button className=\"deleteButton\" onClick={()=>{handlerDeleteButton(value[\"_id\"])}} variant=\"danger\" size=\"sm\">Excluir</Button>\r\n                            \r\n                        </div>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey={`${index}`}>\r\n                        <Card.Body>\r\n                            <ListGroup>   \r\n                              <ListGroup.Item active>Nome da m√°quina: {value.machineName}</ListGroup.Item>\r\n                              <ListGroup.Item>√Årea: {value.field}</ListGroup.Item>\r\n                              <ListGroup.Item>Id operador: {value.userId}</ListGroup.Item>\r\n                              <ListGroup.Item>Feedback: {value.report}</ListGroup.Item>\r\n                            </ListGroup>\r\n                            \r\n\r\n                              {value.procedures.map((value,index)=>(\r\n                                  \r\n                                <ListGroup horizontal>\r\n                                    <ListGroup.Item key={`${index}`}>Item {value.item}: {value.description}</ListGroup.Item>\r\n                                    <ListGroup.Item>{value.checked ? <AiOutlineCheckCircle color=\"green\" size={20}/>:\r\n                                    <AiOutlineCloseCircle color=\"red\" size={20}/>\r\n                                    }</ListGroup.Item>\r\n                                </ListGroup>\r\n                                )\r\n                              )}                              \r\n                        </Card.Body>\r\n                        \r\n                    </Accordion.Collapse>\r\n                    \r\n                </Card>\r\n                ))}\r\n                \r\n            \r\n            </Accordion>\r\n\r\n\r\n        \r\n        \r\n        </div>\r\n    )\r\n})","import React,{useEffect,useState,useMemo,useCallback,useRef} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport './styles.css'\r\nimport Chart from 'chart.js';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nexport default function StatisticScreen(){\r\n    const [totalItens,setTotalItens] = useState();\r\n    const [itensDone,setItensDone] = useState();\r\n    const [monthly,setMonthly] = useState([]);\r\n    const [diary,setDiary] = useState([]);\r\n    const [weekly,setWeekly] = useState([]);\r\n    const [biweekly,setBiweekly] = useState([]);\r\n    const [mounth,setMounth] = useState(\"Junho\");\r\n    const [years,setYears] = useState([2020]);\r\n    const [year,setYear] = useState(2020);\r\n    const chartRef = useRef();\r\n    const MOUNTHS = [{mounth:\"Janeiro\"},{mounth:\"Fevereiro\"},{mounth:\"Mar√ßo\"},\r\n    {mounth:\"Abril\"},{mounth:\"Maio\"},{mounth:\"Junho\"},{ mounth:\"Julho\"},\r\n                     {mounth:\"Agosto\"},{mounth:\"Setembro\"},{mounth:\"Outubro\"},\r\n                     {mounth:\"Novembro\"},{mounth:\"Dezembro\"}]\r\n    const MOUNTHSBYNUMBER = {\r\n                        Janeiro: 0,\r\n                        Fevereiro: 1,\r\n                        Mar√ßo: 2,\r\n                        Abril: 3,\r\n                        Maio: 4,\r\n                        Junho: 5,\r\n                        Julho: 6,\r\n                        Agosto: 7,\r\n                        Setembro: 8,\r\n                        Outubro: 9,\r\n                        Novembro: 10,\r\n                        Dezembro: 11,\r\n                      };\r\n    const initialDate = new Date(\"June 10,2020\");\r\n    const todayDate = new Date();\r\n    useMemo(()=>{\r\n        const yearsDiff = todayDate.getFullYear()-initialDate.getFullYear(); \r\n        var yearAux = initialDate.getFullYear();\r\n        var i = 0\r\n        console.log(yearsDiff);\r\n        var yearsArray = [...years]\r\n        while(i!== yearsDiff){\r\n            yearsArray.push(yearAux+1);\r\n            yearAux = yearAux+1;\r\n            i++;\r\n        }\r\n        setYears(yearsArray);\r\n        \r\n    \r\n    //rever porque tem q colocar as dependencias aqui!\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n    useEffect(()=>{\r\n        async function fetchDate(){\r\n            let sumItens = 0;\r\n            const field = sessionStorage.getItem('field');\r\n            let itensDoneSum=0;\r\n            const response = await fetch(`http://54.158.219.128:3333/frequency/index?year=${year}&mounth=${mounth}&field=${field}`,{\r\n                headers:{\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method:'GET',\r\n            });\r\n            var responseArray = await response.json();\r\n            var diaryMachine = responseArray.diary.map((value)=>{\r\n                const dateMachine = new Date(value.date)\r\n                var monthMachine = dateMachine.getMonth();\r\n                var dayMachine = dateMachine.getDate();\r\n                var todayMonth = initialDate.getMonth();\r\n                if(Number(monthMachine)===Number(todayMonth) && MOUNTHSBYNUMBER[mounth] === Number(todayMonth)){\r\n                    \r\n                    value['days'] = todayDate.getDate()-dayMachine\r\n                    console.log(\"AQUI\"+value['days']);\r\n                \r\n                }else if(MOUNTHSBYNUMBER[mounth] === Number(todayMonth)){\r\n                    value['days'] = Number(todayDate.getDate());\r\n                \r\n                }\r\n                else{\r\n                    var d = new Date(year,mounth+1,0);\r\n                    d = d.getDate();\r\n                    value['days'] = d;\r\n                }\r\n                if(value['days']>0){\r\n                    itensDoneSum = itensDoneSum+value.countItens;\r\n                }\r\n                sumItens = sumItens + (value.procedures.length*value['days']*value['frequency']);\r\n                \r\n                return value;\r\n            })\r\n            var weeklyMachine = responseArray.weekly.map((value)=>{\r\n                const dateMachine = new Date(value.date)\r\n                var monthMachine = dateMachine.getMonth();\r\n                var dayMachine = dateMachine.getDate();\r\n                var todayMonth = initialDate.getMonth();\r\n                if(monthMachine===todayMonth && MOUNTHSBYNUMBER[mounth] === todayMonth){\r\n                    value['days'] = Math.floor((todayDate.getDate()-dayMachine)/7)\r\n \r\n                \r\n                }else if(MOUNTHSBYNUMBER[mounth] === todayMonth){\r\n                    value['days'] = Math.floor(todayDate.getDate()/7);\r\n                \r\n                }\r\n                else{\r\n                    value['days'] = 4;\r\n                }\r\n                if(value['days']>0){\r\n                    itensDoneSum = itensDoneSum+value.countItens;\r\n                }\r\n                sumItens = sumItens + (value.procedures.length*value['days']*value['frequency']);\r\n                return value;\r\n            })\r\n            var biWeeklyMachine = responseArray.biweekly.map((value)=>{\r\n                const dateMachine = new Date(value.date)\r\n                var monthMachine = dateMachine.getMonth();\r\n                var dayMachine = dateMachine.getDate();\r\n                var todayMonth = initialDate.getMonth();\r\n                if(monthMachine===todayMonth && MOUNTHSBYNUMBER[mounth] === todayMonth){\r\n                    value['days'] = Math.floor((todayDate.getDate()-dayMachine)/15);\r\n \r\n                \r\n                }else if(MOUNTHSBYNUMBER[mounth] === Number(todayMonth)){\r\n                    value['days'] = Math.floor(todayDate.getDate()/15);\r\n                \r\n                }\r\n                else{\r\n                    value['days'] = 2;\r\n                }\r\n                if(value['days']>0){\r\n                    itensDoneSum = itensDoneSum+value.countItens;\r\n                }\r\n                \r\n                sumItens = sumItens + (value.procedures.length*value['days']*value['frequency']);\r\n                return value;\r\n            })\r\n            var monthMachine = responseArray.monthly.map((value)=>{\r\n                if(MOUNTHSBYNUMBER[mounth]===todayDate.getMonth()){\r\n                    value['days'] = 0\r\n                \r\n                }else{\r\n                    value['days'] = 1;\r\n                }\r\n                if(value['days']>0){\r\n                    itensDoneSum = itensDoneSum+value.countItens;\r\n                }\r\n                sumItens = sumItens + (value.procedures.length*value['days']*value['frequency']);\r\n                return value;\r\n            })\r\n            setTotalItens(sumItens);\r\n            setItensDone(itensDone);\r\n            setDiary(diaryMachine);\r\n            setMonthly(monthMachine);\r\n            setWeekly(weeklyMachine);\r\n            setBiweekly(biWeeklyMachine);\r\n            console.log(\"total:\"+sumItens);\r\n            console.log(\"feitos:\"+itensDoneSum);\r\n            const itensDontDone = sumItens-itensDoneSum\r\n            new Chart(chartRef.current,{\r\n                \r\n                type:'pie',\r\n                data:{\r\n                    datasets:[{\r\n                        backgroundColor:['red','blue'],\r\n                        data:[itensDontDone,itensDoneSum]\r\n                    }],\r\n                    labels:[\r\n                        'Itens faltando',\r\n                        'Itens feitos'\r\n                    ]\r\n                }\r\n            })\r\n        }\r\n        fetchDate();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[year,mounth])\r\n    function RenderMounth(){\r\n        const fullYear = todayDate.getFullYear();\r\n        console.log(todayDate.getFullYear());\r\n        console.log(year);\r\n\r\n       \r\n        if(year === todayDate.getFullYear() && year === 2020){\r\n            \r\n            return (\r\n                <Form>\r\n                <Form.Group>\r\n                <Form.Label>M√™s</Form.Label>\r\n                <Form.Control value={mounth} onChange={(e)=>{console.log(e.target.value);setMounth(e.target.value)}} as=\"select\" custom> \r\n                               \r\n                    {MOUNTHS.filter((value,index)=>\r\n                     {\r\n                        if(index>=initialDate.getMonth() && index<=todayDate.getMonth()){\r\n                         return true;\r\n                        }\r\n                        return false;\r\n                    }).map((value,index)=>\r\n                    <option> {value.mounth} </option>)}\r\n                </Form.Control>\r\n                \r\n                </Form.Group>\r\n                </Form>\r\n                \r\n                \r\n            \r\n            \r\n            )\r\n        }else if(Number(year) === Number(fullYear) ){\r\n            console.log('aquio');\r\n            return (\r\n                <Form>\r\n                <Form.Group>\r\n                    <Form.Label>M√™s</Form.Label>\r\n                    <Form.Control value={mounth} onChange={(e)=>{console.log(e.target.value);setMounth(e.target.value)}} as=\"select\" custom> \r\n                                 \r\n                    {MOUNTHS.filter((value,index)=>\r\n                    {\r\n                    if(index<=todayDate.getMonth()){\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                    }).map((value,index)=><option> {value.mounth} </option>)}\r\n                </Form.Control>\r\n                </Form.Group>\r\n                </Form>\r\n                \r\n                \r\n            \r\n            \r\n            )\r\n\r\n        }else if(year<todayDate.getFullYear()){\r\n            return (\r\n                <Form>\r\n                <Form.Group>\r\n                    <Form.Label>M√™s</Form.Label>\r\n                <Form.Control value={mounth} onChange={(e)=>{console.log(e.target.value);setMounth(e.target.value)}} as=\"select\" custom> \r\n                                        \r\n                    {MOUNTHS.map((value,index)=><option> {value.mounth} </option>)}\r\n                </Form.Control>\r\n                 </Form.Group>\r\n                 </Form>\r\n                \r\n            )\r\n\r\n        }else{\r\n            return(\r\n            <div>\r\n                oi\r\n                </div>)\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <>\r\n        <div className=\"selects\"> \r\n        <Form>\r\n            <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                <Form.Label>Ano</Form.Label>\r\n                <Form.Control  value={year} as=\"select\" custom onChange={(e)=>setYear(Number(e.target.value))}>\r\n                        {years.map((value)=> <option> {value} </option> )} \r\n                </Form.Control>\r\n            </Form.Group>\r\n        </Form>\r\n        <RenderMounth/>\r\n        </div>\r\n        <div className=\"middle\">\r\n            <div className=\"machines\">\r\n                    <ListGroup>   \r\n                              <ListGroup.Item active>Di√°rio</ListGroup.Item>\r\n                              {diary && diary.map((value)=>\r\n                              (\r\n                                  <>\r\n                                <ListGroup.Item variant=\"primary\">Nome: {value.name}</ListGroup.Item>\r\n                                <ListGroup.Item>Frequ√™ncia: {value.frequency}</ListGroup.Item>\r\n                                <ListGroup.Item>Quant. checks esperados : {value.days*value.frequency}</ListGroup.Item>\r\n                                <ListGroup.Item>Quant. checks realizados : {value.countChecked}</ListGroup.Item>\r\n                                <ListGroup.Item>Quant. itens esperados : {(value.procedures.length)*value.frequency*value.days }</ListGroup.Item>\r\n                                <ListGroup.Item>Quant. itens realizados : {value.countItens}</ListGroup.Item>\r\n                                 </>\r\n                                )\r\n                              )}\r\n                    </ListGroup>\r\n                    <ListGroup>   \r\n                              <ListGroup.Item active>Semanal</ListGroup.Item>\r\n                              {weekly && weekly.map((value)=>\r\n                              (\r\n                                  <>\r\n                                <ListGroup.Item variant=\"primary\">Nome: {value.name}</ListGroup.Item>\r\n                                <ListGroup.Item>Frequ√™ncia: {value.frequency}</ListGroup.Item>\r\n                                <ListGroup.Item>Quant. checks esperados : {value.days*value.frequency}</ListGroup.Item>\r\n                                <ListGroup.Item>Quant. checks realizados : {value.countChecked}</ListGroup.Item>\r\n                                <ListGroup.Item>Quant. itens esperados : {(value.procedures.length)*value.frequency*value.days }</ListGroup.Item>\r\n                                <ListGroup.Item>Quant. itens realizados : {value.countItens}</ListGroup.Item>\r\n                                 </>\r\n                                )\r\n                              )}\r\n                    </ListGroup>\r\n                    <ListGroup>   \r\n                              <ListGroup.Item active>Quinzenal</ListGroup.Item>\r\n                              {biweekly && biweekly.map((value)=>\r\n                              (\r\n                                  <>\r\n                                <ListGroup.Item variant=\"primary\">Nome: {value.name}</ListGroup.Item>\r\n                                <ListGroup.Item>Frequ√™ncia: {value.frequency}</ListGroup.Item>\r\n                                <ListGroup.Item>Quant. checks esperados : {value.days*value.frequency}</ListGroup.Item>\r\n                                <ListGroup.Item>Quant. checks realizados : {value.countChecked}</ListGroup.Item>\r\n                                <ListGroup.Item>Quant. itens esperados : {(value.procedures.length)*value.frequency*value.days }</ListGroup.Item>\r\n                                <ListGroup.Item>Quant. itens realizados : {value.countItens}</ListGroup.Item>\r\n                                 </>\r\n                                )\r\n                              )}\r\n                    </ListGroup>\r\n                    <ListGroup>   \r\n                              <ListGroup.Item active>Mensal</ListGroup.Item>\r\n                              {monthly && monthly.map((value)=>\r\n                              (\r\n                                  <>\r\n                                <ListGroup.Item variant=\"primary\">Nome: {value.name}</ListGroup.Item>\r\n                                <ListGroup.Item>Frequ√™ncia: {value.frequency}</ListGroup.Item>\r\n                                <ListGroup.Item>Quant. checks esperados : {value.days*value.frequency}</ListGroup.Item>\r\n                                <ListGroup.Item>Quant. checks realizados : {value.countChecked}</ListGroup.Item>\r\n                                <ListGroup.Item>Quant. itens esperados : {(value.procedures.length)*value.frequency*value.days }</ListGroup.Item>\r\n                                <ListGroup.Item>Quant. itens realizados : {value.countItens}</ListGroup.Item>\r\n                                 </>\r\n                                )\r\n                              )}\r\n                    </ListGroup>\r\n                \r\n                \r\n         \r\n            </div>\r\n            <div className=\"graph\">\r\n                <canvas className=\"pie\"  ref={chartRef}/>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport {Route,Redirect} from 'react-router-dom';\r\n\r\nexport default function PrivateRoute({children}){\r\n    let auth = sessionStorage.getItem('admin');\r\n    console.log(auth)\r\n    return(\r\n        <Route\r\n            render={({location})=>auth === \"true\" ? children: <Redirect to={{pathname:\"/\",state:{from:location}}}/>}\r\n        />\r\n    )\r\n}","import React,{useState,useRef} from 'react';\r\nimport './styles.css';\r\nimport {useHistory,Link} from 'react-router-dom';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport smart from './../../assets/smart.png'\r\nimport ambev from './../../assets/ambev.png'\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Modal from 'react-bootstrap/Modal'\r\nexport default function RegisterScreen(){\r\n        const userCreated = useRef(false);\r\n        const [userId,setUserId] = useState('');\r\n        const [field,setField] = useState(\"Meio ambiente\");\r\n        const [password,setPassword] = useState('');\r\n        const [name,setUserName] = useState('');\r\n        const [show,setShow] = useState(false);\r\n        \r\n        let history = useHistory();\r\n        async function handlerButtonRegister(){\r\n          \r\n          const data = {userId,password,fields:[field],name};\r\n          console.log(JSON.stringify(data))\r\n          //n√£o √© necess√°rio/n√£o faz sentido esperar dentro de uma promise pois se o tempo\r\n          //do timeout bater esta deve ser rejeitada.\r\n          const createUser = () => (new Promise((resolve,reject)=>{\r\n                setTimeout(()=>reject(new Error('user dont created')),10000);\r\n                fetch(`http://54.158.219.128:3333/users/create`,{\r\n          \r\n                    headers:{     \r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n      \r\n          },\r\n          //credentials:'include',\r\n          body: JSON.stringify(data),\r\n          method:'POST', \r\n          }).then((response)=>{\r\n              if(response.status === 200) {\r\n                  resolve('created');\r\n              }else {\r\n                  reject(new Error('user dont created'))\r\n                } \r\n\r\n        })}))\r\n          try{\r\n                await createUser();\r\n                userCreated.current = true;\r\n                setShow(true);\r\n          }catch(err){\r\n                userCreated.current = true;\r\n          }\r\n        \r\n      \r\n         \r\n          \r\n        }\r\n        function handlerClose(){\r\n            history.replace('/');\r\n        }\r\n        function handlerButtonBack(){\r\n            history.replace('/');\r\n        }\r\n        \r\n        return (\r\n          <body>\r\n              <Modal show={show}>\r\n                  <Modal.Header closeButton>\r\n                      <Modal.Title>Cadastro</Modal.Title>\r\n                  </Modal.Header>\r\n                  <Modal.Body>{userCreated.current ? \"Usu√°rio criado com sucesso\" : \"Ocorreu um erro, Tente novamente mais tarde\"}</Modal.Body>\r\n                  <Modal.Footer>\r\n                      <Button variant=\"primary\" onClick={handlerClose}>\r\n                          Fechar\r\n                      </Button>                     \r\n                  </Modal.Footer>\r\n               </Modal>\r\n            <div className=\"header\">\r\n            <img className=\"image\"  src={smart} alt=\"smartMaitenance\"/>\r\n              \r\n            </div>\r\n            <div className=\"inputsS\">\r\n            <InputGroup className=\"input\" size=\"lg\">\r\n                  <FormControl\r\n                    placeholder=\"Nome\"\r\n                    onChange={(e)=>{setUserName(e.target.value)}}\r\n                    value={name}\r\n                  />\r\n                </InputGroup>\r\n              \r\n               <InputGroup className=\"input\" size=\"lg\">\r\n                  <FormControl\r\n                    placeholder=\"id\"\r\n                    onChange={(e)=>{setUserId(e.target.value)}}\r\n                    value={userId}\r\n                  />\r\n                </InputGroup>\r\n                <InputGroup className=\"input\"size=\"lg\">\r\n                  <FormControl\r\n                    type=\"password\"\r\n                    value={password}\r\n                    placeholder=\"senha\"\r\n                    onChange={(e)=>{setPassword(e.target.value)}}\r\n                  />\r\n                </InputGroup>\r\n                <Form.Group controlId=\"name\">           \r\n                    <Form.Label className=\"fieldInputRegister\" >Escolha a √°rea:</Form.Label>     \r\n                    <Form.Control value={field} onChange={(e)=>{console.log(e.target.value);setField(e.target.value)}} size=\"lg\" as=\"select\" custom> \r\n                                         \r\n                            <option>Meio ambiente</option> \r\n                            <option>BBlend</option>\r\n                            <option>Packaging 501</option>\r\n                            <option>Packaging 502</option>\r\n                            <option>Packaging 503</option>\r\n                            <option>Packaging 511</option>\r\n                            <option>Packaging 512</option>\r\n                            <option>Packaging 561</option> \r\n                            <option>Packaging 562</option> \r\n                            <option>Processo cerveja</option>\r\n                            <option>Utilidades</option> \r\n                            <option>Xaroparia</option>\r\n                            <option>Engenharia</option>\r\n                            <option>testArea</option>  \r\n                </Form.Control>\r\n            </Form.Group>\r\n                <Button className=\"loginButton \"  onClick={handlerButtonRegister} variant=\"outline-primary\" size=\"lg\">Cadastrar</Button>\r\n                <Button className=\"loginButton \"  onClick={handlerButtonBack} variant=\"outline-primary\" size=\"lg\">Voltar</Button>\r\n             \r\n            </div>\r\n           \r\n             \r\n                \r\n            <div className=\"button\">\r\n                <div className=\"footer\">\r\n            \r\n                  <img className=\"imageAmbev\"  src={ambev} alt=\"smartMaitenance\"/>\r\n               \r\n                </div>\r\n           \r\n          </div>\r\n          </body>\r\n        );\r\n    \r\n}","import React,{useState} from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nexport default function OperatorsEditScreen(){\r\n    const [name,setName] = useState(window.data.name);\r\n    const [admin,setAdmin] = useState(window.data.admin ? \"Sim\" : \"N√£o\");\r\n    const [field,setField] = useState(window.data.fields[0]);\r\n    const [id,setId] = useState(window.data.userId);\r\n    async function updateOperatorHandler(){\r\n        const data = {name,admin:admin ===\"Sim\" ? true : false,fields:[field],userId:id};\r\n        const response = await fetch(`http://54.158.219.128:3333/users/update/${window.data[\"_id\"]}` ,{\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method:'PUT',\r\n            body:JSON.stringify(data),\r\n        })\r\n        console.log(await response.json());\r\n        if(response.status===200){\r\n            window.close();\r\n        }\r\n    }\r\n    return(\r\n    <div>\r\n      <Form>\r\n            <Form.Group controlId=\"name\">\r\n                <Form.Label className=\"fieldInputRegister\">Nome do oper√°rio</Form.Label>\r\n                <Form.Control value={name} onChange={(e)=>{setName(e.target.value)}} type=\"text\" placeholder=\"Nome\"/>\r\n            </Form.Group>  \r\n      \r\n     \r\n            <Form.Group controlId=\"ID\">\r\n                <Form.Label className=\"fieldInputRegister\">ID do oper√°rio</Form.Label>\r\n                <Form.Control value={id} onChange={(e)=>{setId(e.target.value)}} type=\"text\" placeholder=\"ID\"/>\r\n            </Form.Group>  \r\n     \r\n    \r\n            <Form.Group controlId=\"admin\">           \r\n                    <Form.Label className=\"fieldInputRegister\">Administrador?</Form.Label>     \r\n                    <Form.Control value={admin} onChange={(e)=>{console.log(e.target.value);setAdmin(e.target.value)}} size=\"sm\" as=\"select\" custom> \r\n                                         \r\n                            <option>Sim</option> \r\n                            <option>N√£o</option>\r\n                            \r\n                </Form.Control>\r\n            </Form.Group>  \r\n    \r\n       <Form.Group controlId=\"Area\">           \r\n                    <Form.Label className=\"fieldInputRegister\">Escolha a √°rea:</Form.Label>     \r\n                    <Form.Control value={field} onChange={(e)=>{console.log(e.target.value);setField(e.target.value)}} size=\"sm\" as=\"select\" custom> \r\n                                         \r\n                            <option>Meio ambiente</option> \r\n                            <option>BBlend</option>\r\n                            <option>Packaging 501</option>\r\n                            <option>Packaging 502</option>\r\n                            <option>Packaging 503</option>\r\n                            <option>Packaging 511</option>\r\n                            <option>Packaging 512</option>\r\n                            <option>Packaging 561</option> \r\n                            <option>Packaging 562</option> \r\n                            <option>Processo cerveja</option>\r\n                            <option>Utilidades</option> \r\n                            <option>Xaroparia</option> \r\n                            <option>Engenharia</option>\r\n                            <option>testArea</option>\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Button onClick={updateOperatorHandler} variant=\"primary\" size=\"sm\">Alterar</Button>{' '}\r\n        </Form>\r\n    </div>\r\n    );\r\n}","import React,{useState} from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nexport default function OperatorsAddScreen(){\r\n    const [name,setName] = useState('');\r\n    const [admin,setAdmin] = useState(\"Sim\");\r\n    const [field,setField] = useState('Meio ambiente');\r\n    const [password,setPassword] = useState('');\r\n    const [id,setId] = useState('');\r\n    async function addOperatorHandler(){\r\n        const data = {name,admin:admin ===\"Sim\" ? true : false,fields:[field],userId:id,password};\r\n        const response = await fetch(`http://54.158.219.128:3333/users/create` ,{\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method:'POST',\r\n            body:JSON.stringify(data),\r\n        })\r\n        console.log(await response.json());\r\n        if(response.status===200){\r\n            window.close();\r\n        }\r\n    }\r\n    return(\r\n    <div>\r\n      <Form>\r\n            <Form.Group controlId=\"name\">\r\n                <Form.Label className=\"fieldInputRegister\">Nome do oper√°rio</Form.Label>\r\n                <Form.Control value={name} onChange={(e)=>{setName(e.target.value)}} type=\"text\" placeholder=\"Nome\"/>\r\n            </Form.Group>  \r\n      \r\n     \r\n            <Form.Group controlId=\"ID\">\r\n                <Form.Label className=\"fieldInputRegister\">ID do oper√°rio</Form.Label>\r\n                <Form.Control value={id} onChange={(e)=>{setId(e.target.value)}} type=\"text\" placeholder=\"ID\"/>\r\n            </Form.Group>  \r\n            <Form.Group controlId=\"Password\">\r\n                <Form.Label className=\"fieldInputRegister\">Senha</Form.Label>\r\n                <Form.Control value={password} onChange={(e)=>{setPassword(e.target.value)}} type=\"text\" placeholder=\"Senha\"/>\r\n            </Form.Group>\r\n     \r\n    \r\n            <Form.Group controlId=\"admin\">           \r\n                    <Form.Label className=\"fieldInputRegister\">Administrador?</Form.Label>     \r\n                    <Form.Control value={admin} onChange={(e)=>{console.log(e.target.value);setAdmin(e.target.value)}} size=\"sm\" as=\"select\" custom> \r\n                                         \r\n                            <option>Sim</option> \r\n                            <option>N√£o</option>\r\n                            \r\n                </Form.Control>\r\n            </Form.Group>  \r\n    \r\n       <Form.Group controlId=\"Area\">           \r\n                    <Form.Label className=\"fieldInputRegister\">Escolha a √°rea:</Form.Label>     \r\n                    <Form.Control value={field} onChange={(e)=>{console.log(e.target.value);setField(e.target.value)}} size=\"sm\" as=\"select\" custom> \r\n                                         \r\n                            <option>Meio ambiente</option> \r\n                            <option>BBlend</option>\r\n                            <option>Packaging 501</option>\r\n                            <option>Packaging 502</option>\r\n                            <option>Packaging 503</option>\r\n                            <option>Packaging 511</option>\r\n                            <option>Packaging 512</option>\r\n                            <option>Packaging 561</option> \r\n                            <option>Packaging 562</option> \r\n                            <option>Processo cerveja</option>\r\n                            <option>Utilidades</option> \r\n                            <option>Xaroparia</option> \r\n                            <option>Engenharia</option>\r\n                            <option>testArea</option>\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Button onClick={addOperatorHandler} variant=\"primary\" size=\"sm\">Adicionar</Button>{' '}\r\n        </Form>\r\n    </div>\r\n    );\r\n}","import React,{useState,useRef} from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport FormFile from 'react-bootstrap/FormFile'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport Form from 'react-bootstrap/Form';\r\nimport './styles.css'\r\nexport default function Csv5w(){\r\n    const fileSelect = useRef();\r\n    const [progresso,setProgresso] = useState(0);\r\n    const [loading,setLoading] = useState(false);\r\n    const [file,setFile] = useState(0);\r\n    async function fetchData(){\r\n        setLoading(true);\r\n        setProgresso(30)\r\n        const data = new FormData();\r\n        data.append('csv',file);\r\n        console.log(file.type);\r\n        setProgresso(progresso+50);\r\n        //fazer uma promessa para setar um valor de tempo para a req\r\n        const response = await fetch(`http://54.158.219.128:3333/fileupload/5w/`,{\r\n            method:\"POST\",\r\n            \r\n            body:data,\r\n        })\r\n        if(response.status===200){\r\n            setProgresso(100);\r\n        }else{\r\n            setProgresso(80);\r\n            //colocar erro\r\n        }\r\n        console.log(await response.json());\r\n    }\r\n    \r\n    \r\n    const [name,setName] = useState('Arquivo.csv');\r\n     \r\n    return(\r\n        \r\n        <div>\r\n            <Form name=\"csv\">\r\n            <Form.Group controlId=\"vlabel\">\r\n                <InputGroup  className=\"mb-3\">\r\n                \r\n                            <InputGroup.Prepend >\r\n                           \r\n                                <Button   variant=\"primary\">Arquivo</Button>\r\n                   \r\n                            </InputGroup.Prepend>\r\n                        \r\n                            \r\n                            <Form.File \r\n                            \r\n                            name=\"csv\"\r\n                            className=\"vlabel\"\r\n                            bsPrefix=\"vlabel\"\r\n                            custom \r\n                            >  \r\n                                    <FormFile.Label name='csv'  bsCustomPrefix=\"vvlabel\" className=\"vvlabel\" >{name}</FormFile.Label>\r\n                                    <Form.File.Input \r\n                                    name=\"csv\"\r\n                                    accept=\".csv\" \r\n                                    onChange={(e)=>{\r\n                                        setName(e.target.files[0].name);\r\n                                        setFile(e.target.files[0]);\r\n                                        fileSelect.current.labels[0].innerText=e.target.files[0].name;\r\n                                        }} \r\n                                    ref={fileSelect}/>\r\n                                    \r\n                               \r\n                            </Form.File>\r\n                            <InputGroup.Append>\r\n                                <Button onClick={()=>fileSelect.current.click()} variant=\"outline-primary\">...</Button>\r\n                             </InputGroup.Append>\r\n                                \r\n                              \r\n                           \r\n                        \r\n                           \r\n                            \r\n                        \r\n                        </InputGroup>\r\n          </Form.Group>\r\n\r\n                    \r\n            </Form>\r\n        <Form>\r\n        \r\n        </Form>\r\n        <Button onClick={fetchData}  variant=\"primary\">Importar</Button>\r\n        {loading && <ProgressBar className=\"barraProgresso\" animated label={`${progresso}%`} now={progresso} />}\r\n\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\r\nimport MainScreen from './pages/mainscreen/MainScreen'\r\nimport OperatorScreen from './pages/operatorScreen'\r\nimport MaquinaScreen from './pages/maquinaScreen/MaquinaScreen'\r\nimport AddScreen from './pages/addScreen'\r\nimport CsvScreen from './pages/csvScreen'\r\nimport InfoScreen from './pages/infoScreen'\r\nimport EditScreen from './pages/editScreen'\r\nimport ResultScreen from './pages/resultScreen'\r\nimport LoginScreen from './pages/loginScreen'\r\nimport ClScreen from './pages/clScreen'\r\nimport StatisticScreen from './pages/statisticScreen'\r\nimport PrivateRoute from './utils/PrivateRoute'\r\nimport RegisterScreen from './pages/registerScreen';\r\nimport OperatorsEditScreen from './pages/operatorsEditScreen'\r\nimport OperatorsAddScreen from './pages/addOperatorScreen';\r\nimport Csv5wScreen from './pages/csv5wScreen'\r\nexport default function Routes(){\r\n    return(\r\n        <BrowserRouter >\r\n            <Switch >\r\n                <Route path=\"/\"  exact component={LoginScreen}/>\r\n                <Route path=\"/register\"  exact component={RegisterScreen}/>\r\n                <PrivateRoute path=\"/mainScreen\">\r\n                    <MainScreen/>\r\n                </PrivateRoute>\r\n                <PrivateRoute path=\"/operator\">\r\n                    <OperatorScreen/>\r\n                </PrivateRoute>\r\n                <PrivateRoute path=\"/maquinas\">\r\n                    <MaquinaScreen/>\r\n                </PrivateRoute>\r\n                <PrivateRoute path=\"/add\">\r\n                    <AddScreen/>\r\n                </PrivateRoute>\r\n                <PrivateRoute  path=\"/info\">\r\n                    <InfoScreen/>\r\n                </PrivateRoute>\r\n                <PrivateRoute  path=\"/edit\">\r\n                    <EditScreen/>\r\n                </PrivateRoute>\r\n                <PrivateRoute  path=\"/result\">\r\n                    <ResultScreen/>\r\n                </PrivateRoute>\r\n                <PrivateRoute  path=\"/csv\">\r\n                    <CsvScreen/>\r\n                </PrivateRoute>\r\n                <PrivateRoute  path=\"/cl\">\r\n                    <ClScreen/>\r\n                </PrivateRoute>\r\n                <PrivateRoute  path=\"/statistic\">\r\n                    <StatisticScreen/>\r\n                </PrivateRoute>\r\n                <PrivateRoute  path=\"/operatoredit\">\r\n                    <OperatorsEditScreen/>\r\n                </PrivateRoute> \r\n                <PrivateRoute  path=\"/operatoradd\">\r\n                    <OperatorsAddScreen/>\r\n                </PrivateRoute>\r\n                <PrivateRoute  path=\"/csv5w\">\r\n                    <Csv5wScreen/>\r\n                </PrivateRoute>                    \r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}","import React from 'react';\r\nimport Routes from './Routes';\r\nimport \"./index.css\"\r\nexport default function App(){\r\n    return(\r\n        <div className=\"app\">\r\n            <Routes/>\r\n        </div>\r\n    )\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
{"version":3,"sources":["assets/smart.png","assets/ambev.png","pages/mainscreen/MainScreen.js","pages/usersScreen/UserScreen.js","pages/maquinaScreen/MaquinaScreen.js","pages/addScreen/index.js","pages/csvScreen/index.js","pages/infoScreen/index.js","pages/editScreen/index.js","pages/resultScreen/index.js","pages/loginScreen/index.js","utils/PrivateRoute.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MainScreen","handlerButtonClick","screen","window","open","console","log","className","src","smart","alt","Button","onClick","variant","size","ambev","MaquinaScreen","InputGroup","Prepend","FormControl","placeholder","aria-label","Table","hover","responsive","bordered","fetchMachine","a","fetch","headers","method","response","json","data","setMachines","useState","machines","search","setSearch","onPressTable","name","status","useEffect","onChange","e","target","value","filter","indexOf","map","valor","indice","key","field","onPressDelete","AddScreen","procedures","body","JSON","stringify","close","cont","useRef","setProcedures","setName","setField","current","quant","setQuant","Form","Group","controlId","Label","Control","type","as","custom","aux","array","arrayProcedures","pop","index","event","item","location","description","point","condition","Csv","fileSelect","progresso","setProgresso","loading","setLoading","file","setFile","FormData","append","File","bsPrefix","FormFile","bsCustomPrefix","Input","accept","files","labels","innerText","ref","Append","click","ProgressBar","animated","label","now","InfoScreen","ListGroup","Item","active","length","i","ResultScreen","whys","setWhys","Date","initialDate","setInitialDate","finalDate","setFinalDate","id","setId","searchPress","setSearchPress","handlerSearchButton","idDelete","arrayDelele","Accordion","defaultActiveKey","Card","Header","Toggle","eventKey","userId","handlerDeleteButton","Collapse","Body","descriptionAnomaly","corrective","maintenanceOrder","number","cause","deterioration","comment","maintenanceNotes","LoginScreen","setUserId","password","setPassword","history","useHistory","sessionStorage","removeItem","credentials","setItem","replace","PrivateRoute","children","auth","getItem","render","to","pathname","state","from","Routes","path","exact","component","App","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ee2a9f1a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/smart.0e5bd4db.png\";","module.exports = __webpack_public_path__ + \"static/media/ambev.ce645d6e.png\";","import React from 'react';\r\nimport './styles.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport smart from './../../assets/smart.png'\r\nimport ambev from './../../assets/ambev.png'\r\n\r\nfunction MainScreen() {\r\n  function handlerButtonClick(screen){\r\n    if(screen === \"result\"){\r\n      window.open('https://jamesjs.github.io/site/#Result');\r\n    }\r\n    if(screen ==='operario'){\r\n      console.log(\"res\");\r\n    }else if(screen ==='maquina'){\r\n      window.open('https://jamesjs.github.io/site/#Maquinas');\r\n    }\r\n  }\r\n  return (\r\n    <body>\r\n      <div className=\"header\">\r\n      <img className=\"image\"  src={smart} alt=\"smartMaitenance\"/>\r\n        \r\n      </div>\r\n      <div className=\"buttons\">\r\n         <Button onClick={()=>{handlerButtonClick('maquina')}} variant=\"outline-primary\" size=\"lg\">Cadastro de checks</Button>{' '}\r\n        {\r\n           //<Button onClick={()=>{handlerButtonClick('operario')}} variant=\"outline-primary\" size=\"lg\">Cadastro de operadores</Button>\r\n        } \r\n      </div>\r\n     \r\n       \r\n          \r\n      <div className=\"button\">\r\n          <div className=\"footer\">\r\n      \r\n            <img className=\"imageAmbev\"  src={ambev} alt=\"smartMaitenance\"/>\r\n         \r\n          </div>\r\n      <div className=\"W5ButtonDiv\">\r\n        <Button className=\"W5Button\" onClick={()=>{handlerButtonClick('result')}} variant=\"outline-primary\" size=\"sm\">5W</Button>{' '}\r\n      </div>\r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default MainScreen;\r\n","import React from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport Table from 'react-bootstrap/Table'\r\nimport \"./styles.css\"\r\nexport default function MaquinaScreen(){\r\n    return(\r\n        <html>\r\n        <body>\r\n            <div  className=\"space\">\r\n                \r\n\r\n\r\n\r\n\r\n            </div>\r\n           \r\n            <div className=\"tableDiv\">\r\n                 <div>\r\n                 <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Prepend>\r\n                        <Button variant=\"primary\" size=\"sm\">Pesquisar</Button>{' '}\r\n                    </InputGroup.Prepend>\r\n                             <FormControl\r\n                                 placeholder=\"Digite um nome ou ID\"\r\n                                 aria-label=\"Maquina\"\r\n                                 //aria-describedby=\"basic-addon1\"\r\n                                />\r\n                             </InputGroup>\r\n                    \r\n                 </div>\r\n                \r\n                 <div className=\"Table\" >\r\n                 <div className=\"AddAndCsvButtons\">\r\n                        <Button variant=\"primary\" size=\"sm\">+</Button>{' '}\r\n                        <Button variant=\"primary\" size=\"sm\">CSV</Button>{' '}\r\n                    </div>\r\n                <Table hover responsive bordered>\r\n                   <thead>\r\n                        <tr>\r\n                           <th>#</th>\r\n                           <th>Nome</th>\r\n                           <th>ID</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr onClick={()=>{console.log('clicou')}}>\r\n                        <td>1</td>\r\n                        <td>Fulano</td>\r\n                        <td>9999</td>\r\n                    </tr>\r\n                    <tr onClick={()=>{console.log('clicou')}}>\r\n                        <td>1</td>\r\n                        <td>Fulano</td>\r\n                        <td>9999</td>\r\n                    </tr>\r\n                    <tr onClick={()=>{console.log('clicou')}}>\r\n                        <td>1</td>\r\n                        <td>Fulano</td>\r\n                        <td>9999</td>\r\n                    </tr>\r\n                    <tr onClick={()=>{console.log('clicou')}}>\r\n                        <td>1</td>\r\n                        <td>Fulano</td>\r\n                        <td>9999</td>\r\n                    </tr>\r\n                    <tr onClick={()=>{console.log('clicou')}}>\r\n                        <td>1</td>\r\n                        <td>Fulano</td>\r\n                        <td>9999</td>\r\n                    </tr>\r\n                    <tr onClick={()=>{console.log('clicou')}}>\r\n                        <td>1</td>\r\n                        <td>Fulano</td>\r\n                        <td>9999</td>\r\n                    </tr>\r\n                    <tr onClick={()=>{console.log('clicou')}}>\r\n                        <td>1</td>\r\n                        <td>Fulano</td>\r\n                        <td>9999</td>\r\n                    </tr>\r\n                    <tr onClick={()=>{console.log('clicou')}}>\r\n                        <td>1</td>\r\n                        <td>Fulano</td>\r\n                        <td>9999</td>\r\n                    </tr>\r\n                    <tr onClick={()=>{console.log('clicou')}}>\r\n                        <td>1</td>\r\n                        <td>Fulano</td>\r\n                        <td>9999</td>\r\n                    </tr>\r\n                    <tr onClick={()=>{console.log('clicou')}}>\r\n                        <td>1</td>\r\n                        <td>Fulano</td>\r\n                        <td>9999</td>\r\n                    </tr>\r\n                    <tr onClick={()=>{console.log('clicou')}}>\r\n                        <td>1</td>\r\n                        <td>Fulano</td>\r\n                        <td>9999</td>\r\n                    </tr>\r\n                    <tr onClick={()=>{console.log('clicou')}}>\r\n                        <td>1</td>\r\n                        <td>Fulano</td>\r\n                        <td>9999</td>\r\n                    </tr>\r\n                    <tr onClick={()=>{console.log('clicou')}}>\r\n                        <td>1</td>\r\n                        <td>Fulano</td>\r\n                        <td>9999</td>\r\n                    </tr>\r\n                    <tr onClick={()=>{console.log('clicou')}}>\r\n                        <td>1</td>\r\n                        <td>Fulano</td>\r\n                        <td>9999</td>\r\n                    </tr>\r\n                    <tr onClick={()=>{console.log('clicou')}}>\r\n                        <td>1</td>\r\n                        <td>Fulano</td>\r\n                        <td>9999</td>\r\n                    </tr>\r\n                    <tr onClick={()=>{console.log('clicou')}}>\r\n                        <td>1</td>\r\n                        <td>Fulano</td>\r\n                        <td>9999</td>\r\n                    </tr> <tr onClick={()=>{console.log('clicou')}}>\r\n                        <td>1</td>\r\n                        <td>Fulano</td>\r\n                        <td>9999</td>\r\n                    </tr> <tr onClick={()=>{console.log('clicou')}}>\r\n                        <td>1</td>\r\n                        <td>Fulano</td>\r\n                        <td>9999</td>\r\n                    </tr> <tr onClick={()=>{console.log('clicou')}}>\r\n                        <td>1</td>\r\n                        <td>Fulano</td>\r\n                        <td>9999</td>\r\n                    </tr>\r\n                </tbody>\r\n                    \r\n                \r\n                </Table>\r\n                    \r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"colors\">\r\n\r\n\r\n                \r\n            </div>\r\n\r\n        </body>\r\n        </html>\r\n    )\r\n}","import React,{useEffect,useState} from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport Table from 'react-bootstrap/Table'\r\nimport \"./styles.css\";\r\nexport default function MaquinaScreen(){\r\n    const fetchMachine = async ()=>{\r\n        const response = await fetch(\"http://52.23.184.13:3333/machines/index\",{\r\n        headers:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method:'GET',\r\n    })\r\n        const data = await response.json();\r\n        setMachines(data);\r\n        console.log(data);\r\n    }\r\n    function attTable(){\r\n        fetchMachine();\r\n    }\r\n    const [machines,setMachines] = useState([]);\r\n    const [search,setSearch] = useState('');\r\n    useEffect(()=>{  \r\n        fetchMachine();\r\n    },[])\r\n    function onPressTable(name){\r\n        window.open('http://JamesJs.github.io/site//#Info',name,\"width=800,height=800\");\r\n    }\r\n    function onPressEdit(name){\r\n        window.open('http://JamesJs.github.io/site//#edit',name,\"width=800,height=800\");\r\n    }\r\n    async function onPressDelete(name){\r\n        var response = await fetch(`http://52.23.184.13:3333/machines/delete?name=${name}`,{\r\n        headers:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method:'GET',\r\n    })\r\n    console.log(name);\r\n    console.log(response.status);\r\n       // if(response.status===200){\r\n            fetchMachine();\r\n        //}\r\n    }\r\n    function onPressAdd(){\r\n        window.open('http://JamesJs.github.io/site//#add',\"Adicionar\",\"width=800,height=800\");\r\n\r\n    }\r\n    function onPressCsv(){\r\n       \r\n        window.open('http://JamesJs.github.io/site//#csv',\"Adicionar\",\"width=800,height=800\");\r\n    }\r\n    return(\r\n      \r\n           \r\n          <>\r\n                <div  className=\"space\">\r\n                \r\n\r\n\r\n\r\n\r\n            </div>\r\n           \r\n            <div className=\"tableDiv\">\r\n                 <div>\r\n                 <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Prepend>\r\n                        <Button variant=\"primary\" size=\"sm\">Pesquisar</Button>{' '}\r\n                    </InputGroup.Prepend>\r\n                             <FormControl \r\n                                 onChange={(e)=>{setSearch(e.target.value)}}\r\n                                 placeholder=\"Digite uma máquina\"\r\n                                 aria-label=\"Maquina\"\r\n                                 //aria-describedby=\"basic-addon1\"\r\n                                />\r\n                             </InputGroup>\r\n                    \r\n                 </div>\r\n                \r\n                 <div className=\"Table\" >\r\n                 <div className=\"AddAndCsvButtons\">\r\n                        \r\n                        <Button onClick={onPressAdd} variant=\"primary\" size=\"sm\">+</Button>{' '}\r\n                        <Button onClick={onPressCsv} variant=\"primary\" size=\"sm\">CSV</Button>{' '}\r\n                        <Button onClick={attTable} variant=\"primary\" size=\"sm\">Atualizar</Button>{' '}\r\n                    </div>\r\n                    <Table hover responsive bordered>\r\n                   <thead>\r\n                        <tr>\r\n                           <th>#</th>\r\n                           <th>Nome</th>\r\n                           <th>Área</th>\r\n                           <th>Opções</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {machines.filter((value)=>search ? (value.name.indexOf(search)===0) : true).map((valor,indice)=>(\r\n                        <tr key={indice}>\r\n                        <td onClick={()=>onPressTable(valor.name)} >{indice}</td>\r\n                        <td onClick={()=>onPressTable(valor.name)}>{valor.name}</td>\r\n                        <td onClick={()=>onPressTable(valor.name)}>{valor.field}</td>\r\n                        <td>\r\n                            <Button className=\"deleteButton\" onClick={()=>{onPressDelete(valor.name)}} variant=\"danger\" size=\"sm\">Excluir</Button>\r\n                            <Button onClick={()=>{onPressEdit(valor.name)}} variant=\"info\" size=\"sm\">Editar</Button>\r\n                        </td>\r\n                    </tr> \r\n                    )\r\n\r\n                    )}\r\n                    \r\n                </tbody>\r\n                    \r\n                \r\n                </Table>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"color\">\r\n\r\n\r\n                \r\n            </div>\r\n    </>\r\n     \r\n    \r\n    )\r\n}","import React,{useState,useRef} from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport './styles.css'\r\n\r\nexport default function AddScreen(){\r\n    async function addMachine(){\r\n        \r\n        const data = {name,procedures,field};\r\n        console.log(data);\r\n        console.log(procedures);\r\n        const response = await fetch(\"http://52.23.184.13:3333/machines/create\",{\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method:'POST',\r\n            body:JSON.stringify(data),\r\n        })\r\n        console.log(await response.json());\r\n        if(response.status===200){\r\n            window.close();\r\n        }\r\n    }\r\n    var cont = useRef(0);\r\n    const [procedures,setProcedures] = useState([{}]);\r\n    const [name,setName] = useState('');\r\n    const [field,setField] = useState(\"Meio ambiente\");\r\n    \r\n    const [quant,setQuant] = useState([cont.current]);\r\n    \r\n    function addProcedure(){ \r\n        var aux            \r\n        aux = cont.current+1;\r\n        cont.current = cont.current+1;\r\n        setQuant([...quant,aux]);\r\n        setProcedures([...procedures,{}]);\r\n        \r\n    }\r\n    function removeProcedure(){\r\n        var array = [...quant];\r\n        var arrayProcedures= [...procedures];\r\n        if(cont.current>0){\r\n            array.pop();\r\n            arrayProcedures.pop();\r\n            setQuant(array);\r\n            setProcedures(arrayProcedures);\r\n            cont.current = cont.current-1;\r\n        }\r\n        \r\n    }\r\n    return (\r\n    <div>\r\n        <Form>\r\n            <Form.Group controlId=\"name\">\r\n                <Form.Label>Digite o nome da máquina</Form.Label>\r\n                <Form.Control onChange={(e)=>{setName(e.target.value)}} type=\"text\" placeholder=\"Nome\"/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"name\">                \r\n            <Form.Control value={field} onChange={(e)=>{console.log(e.target.value);setField(e.target.value)}} as=\"select\" custom> \r\n                <Form.Label >Escolha a área</Form.Label>                          \r\n                            <option> Meio ambiente </option> \r\n                            <option> BBlend </option>\r\n                            <option> Packaging 501  </option>\r\n                            <option> Packaging 502 </option>\r\n                            <option> Packaging 503  </option>\r\n                            <option> Packaging 511  </option>\r\n                            <option> Packaging 512  </option>\r\n                            <option> Packaging 561 </option> \r\n                            <option> Packaging 562 </option> \r\n                            <option> Processo cerveja  </option>\r\n                            <option> Utilidades </option> \r\n                            <option> Xaroparia </option> \r\n                </Form.Control>\r\n            </Form.Group>\r\n            <p>Use os botões para adicionar ou remover procedimentos</p>\r\n            <div className=\"buttonsAddandRemove\">\r\n                \r\n                <Button onClick={addProcedure} variant=\"primary\" size=\"lg\">+</Button>{' '}\r\n                <Button onClick={removeProcedure} variant=\"primary\" size=\"lg\">-</Button>{' '}\r\n            </div>\r\n            {quant.map((valor,index)=>\r\n            <div key={index}>\r\n                {`Procedimento ${index}:`}\r\n                <Form.Group className=\"formInicio\" controlId=\"name\">\r\n                    <Form.Label>Digite o item do procedimento</Form.Label>\r\n                    <Form.Control onChange={(event)=>{\r\n                        console.log(event.target.value)\r\n                        var array = [];\r\n                        array = [...procedures];\r\n                        array[index].item = event.target.value;\r\n                        setProcedures(array);\r\n                    }} type=\"text\" placeholder=\"Nome\"/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Digite a localização do procedimento</Form.Label>\r\n                    <Form.Control onChange={(event)=>{\r\n                        var array = [];\r\n                        array = [...procedures];\r\n                        array[index].location = event.target.value;\r\n                        setProcedures(array);\r\n                    }}  type=\"text\" placeholder=\"Nome\"/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Digite a descrição do procedimento</Form.Label>\r\n                    <Form.Control onChange={(event)=>{\r\n                        var array = [];\r\n                        array = [...procedures];\r\n                        array[index].description = event.target.value;\r\n                        setProcedures(array);\r\n                    }}  type=\"text\" placeholder=\"Nome\"/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Digite o ponto do procedimento</Form.Label>\r\n                    <Form.Control onChange={(event)=>{\r\n                        var array = [];\r\n                        array = [...procedures];\r\n                        array[index].point = event.target.value;\r\n                        setProcedures(array);\r\n                    }}  type=\"\" placeholder=\"Nome\"/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Digite o metodo do procedimento</Form.Label>\r\n                    <Form.Control onChange={(event)=>{\r\n                        var array = [];\r\n                        array = [...procedures];\r\n                        array[index].method = event.target.value;\r\n                        setProcedures(array);\r\n                    }}  type=\"text\" placeholder=\"Nome\"/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Digite a condição da máquina</Form.Label>\r\n                    <Form.Control onChange={(event)=>{\r\n                        var array = [];\r\n                        array = [...procedures];\r\n                        array[index].condition = event.target.value;\r\n                        setProcedures(array);\r\n                    }}  type=\"text\" placeholder=\"Nome\"/>\r\n                </Form.Group>\r\n            </div>\r\n            \r\n            )}\r\n            <Button onClick={addMachine} variant=\"primary\" size=\"sm\">Adicionar</Button>{' '}\r\n        </Form>\r\n    </div>)\r\n\r\n\r\n}","import React,{useState,useRef} from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport FormFile from 'react-bootstrap/FormFile'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport Form from 'react-bootstrap/Form';\r\nimport './styles.css'\r\nexport default function Csv(){\r\n    const fileSelect = useRef();\r\n    const [progresso,setProgresso] = useState(0);\r\n    const [loading,setLoading] = useState(false);\r\n    const [file,setFile] = useState(0);\r\n    const [field,setField] = useState(\"Meio ambiente\");\r\n    async function fetchData(){\r\n        setLoading(true);\r\n        setProgresso(30)\r\n        const data = new FormData();\r\n        data.append('csv',file);\r\n        console.log(file.type);\r\n        setProgresso(progresso+50);\r\n        //fazer uma promessa para setar um valor de tempo para a req\r\n        const response = await fetch(`http://52.23.184.13:3333/fileupload/?field=${field}`,{\r\n            method:\"POST\",\r\n            \r\n            body:data,\r\n        })\r\n        if(response.status===200){\r\n            setProgresso(100);\r\n        }else{\r\n            setProgresso(80);\r\n            //colocar erro\r\n        }\r\n        console.log(await response.json());\r\n    }\r\n    \r\n    \r\n    const [name,setName] = useState('Arquivo.csv');\r\n     \r\n    return(\r\n        \r\n        <div>\r\n            <Form name=\"csv\">\r\n            <Form.Group controlId=\"vlabel\">\r\n                <InputGroup  className=\"mb-3\">\r\n                \r\n                            <InputGroup.Prepend >\r\n                           \r\n                                <Button   variant=\"primary\">Arquivo</Button>\r\n                   \r\n                            </InputGroup.Prepend>\r\n                        \r\n                            \r\n                            <Form.File \r\n                            \r\n                            name=\"csv\"\r\n                            className=\"vlabel\"\r\n                            bsPrefix=\"vlabel\"\r\n                            custom \r\n                            >  \r\n                                    <FormFile.Label name='csv'  bsCustomPrefix=\"vvlabel\" className=\"vvlabel\" >{name}</FormFile.Label>\r\n                                    <Form.File.Input \r\n                                    name=\"csv\"\r\n                                    accept=\".csv\" \r\n                                    onChange={(e)=>{\r\n                                        setName(e.target.files[0].name);\r\n                                        setFile(e.target.files[0]);\r\n                                        fileSelect.current.labels[0].innerText=e.target.files[0].name;\r\n                                        }} \r\n                                    ref={fileSelect}/>\r\n                                    \r\n                               \r\n                            </Form.File>\r\n                            <InputGroup.Append>\r\n                                <Button onClick={()=>fileSelect.current.click()} variant=\"outline-primary\">...</Button>\r\n                             </InputGroup.Append>\r\n                                \r\n                              \r\n                           \r\n                        \r\n                           \r\n                            \r\n                        \r\n                        </InputGroup>\r\n          </Form.Group>\r\n\r\n                    \r\n            </Form>\r\n        <Form>\r\n        \r\n      <Form.Group controlId=\"name\">\r\n        <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                           \r\n                        <Button variant=\"primary\">Área</Button>\r\n                            \r\n                    </InputGroup.Prepend>\r\n            <Form.Control value={field} onChange={(e)=>{console.log(e.target.value);setField(e.target.value)}} as=\"select\" custom> \r\n                                  \r\n                            <option> Meio ambiente </option> \r\n                            <option> BBlend </option>\r\n                            <option> Packaging 501  </option>\r\n                            <option> Packaging 502 </option>\r\n                            <option> Packaging 503  </option>\r\n                            <option> Packaging 511  </option>\r\n                            <option> Packaging 512  </option>\r\n                            <option> Packaging 561 </option> \r\n                            <option> Packaging 562 </option> \r\n                            <option> Processo cerveja  </option>\r\n                            <option> Utilidades </option> \r\n                            <option> Xaroparia </option> \r\n                </Form.Control>\r\n            \r\n          </InputGroup>\r\n        </Form.Group>\r\n        </Form>\r\n        <Button onClick={fetchData}  variant=\"primary\">Importar</Button>\r\n        {loading && <ProgressBar className=\"barraProgresso\" animated label={`${progresso}%`} now={progresso} />}\r\n\r\n\r\n        </div>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nexport default function InfoScreen(){\r\n    const [name,setName] = useState(window.name);\r\n    const [field,setField] = useState('');\r\n    const [procedures,setProcedures] = useState([]);\r\n    \r\n\r\n    \r\n        useEffect(()=>{\r\n            const fetchMachine = async ()=>{\r\n                console.log(window.name);\r\n                const response =\r\n                await fetch(`http://52.23.184.13:3333/machines/find?name=${window.name}`,{\r\n                headers:{\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method:'GET',\r\n            })\r\n                if(response.status===200){\r\n                     const data = await response.json();\r\n                     console.log(data.procedures);\r\n                     setName(data.name);\r\n                     setField(data.field);\r\n                     setProcedures(data.procedures);\r\n                     \r\n                     \r\n                }\r\n                \r\n                \r\n            }\r\n        \r\n            fetchMachine();\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        },[])\r\n        \r\n    return(\r\n        <ListGroup>\r\n            <ListGroup.Item>Nome: {name}</ListGroup.Item>\r\n            <ListGroup.Item>Área: {field}</ListGroup.Item>\r\n            <ListGroup.Item>\r\n            {procedures.map((value,index)=>(\r\n                <div key={index}>\r\n                <ListGroup.Item as={value.name} active> Procedimento: {index} </ListGroup.Item>\r\n                <ListGroup>\r\n                   \r\n                   <ListGroup.Item>Item: {value.item} </ListGroup.Item>\r\n                   <ListGroup.Item>Descrição: {value.description}</ListGroup.Item>\r\n                   <ListGroup.Item>Método: {value.method}</ListGroup.Item>\r\n                   <ListGroup.Item>Localização: {value.location}</ListGroup.Item>\r\n                   <ListGroup.Item>Pontos:  {value.point}</ListGroup.Item>\r\n                   <ListGroup.Item>Condição: {value.condition}</ListGroup.Item>\r\n                </ListGroup>\r\n                </div>\r\n                ))\r\n            }\r\n            </ListGroup.Item>\r\n            \r\n        </ListGroup>\r\n    )\r\n    \r\n}","import React,{useState,useRef,useEffect} from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport './styles.css'\r\n\r\nexport default function AddScreen(){\r\n    var cont = useRef(0);\r\n    const [name,setName] = useState(window.name);\r\n    const [procedures,setProcedures] = useState([{}]);\r\n    const [field,setField] = useState(''); \r\n    const [quant,setQuant] = useState([]);\r\n    useEffect(()=>{\r\n        const fetchMachine = async ()=>{\r\n            const response = await fetch(`http://52.23.184.13:3333/machines/find?name=${window.name}`,{\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method:'GET',\r\n        })\r\n            if(response.status===200){\r\n                 var array = [];\r\n                 const data = await response.json();\r\n                 console.log(data.procedures.length);\r\n                 cont.current = (data.procedures.length-1);\r\n                 setProcedures(data.procedures);\r\n                 for(var i =0;i<=cont.current;i++){\r\n                    array[i] = i;\r\n                 }\r\n                 setQuant(array);\r\n                 setField(data.field);\r\n            }\r\n            \r\n            \r\n        }\r\n    \r\n        fetchMachine();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n    async function updateMachine(){\r\n        const data = {name,procedures,field};\r\n        const response = await fetch(`http://52.23.184.13:3333/machines/modify?name=${window.name}` ,{\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method:'POST',\r\n            body:JSON.stringify(data),\r\n        })\r\n        console.log(await response.json());\r\n        if(await response.status===200){\r\n            window.close();\r\n        }\r\n    }\r\n    \r\n\r\n    \r\n    function addProcedure(){ \r\n        var aux            \r\n        aux = cont.current+1;\r\n        cont.current = cont.current+1;\r\n        setQuant([...quant,aux]);\r\n        setProcedures([...procedures,{}]);\r\n        \r\n    }\r\n    function removeProcedure(){\r\n        var array = [...quant];\r\n        var arrayProcedures= [...procedures];\r\n        if(cont.current>0){\r\n            array.pop();\r\n            arrayProcedures.pop();\r\n            setQuant(array);\r\n            setProcedures(arrayProcedures);\r\n            cont.current = cont.current-1;\r\n        }\r\n        \r\n    }\r\n    return (\r\n    <div>\r\n        <Form>\r\n            <Form.Group controlId=\"name\">\r\n                <Form.Label>Digite o nome da máquina</Form.Label>\r\n                <Form.Control value={name} onChange={(e)=>{setName(e.target.value)}} type=\"text\" placeholder=\"Nome\"/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"name\">\r\n                <Form.Label>Digite o grupo da máquina</Form.Label>\r\n                <Form.Control value={field}  onChange={(e)=>{setField(e.target.value)}} type=\"text\" placeholder=\"Área\"/>\r\n            </Form.Group>\r\n            <p>Use os botões para adicionar ou remover procedimentos</p>\r\n            <div className=\"buttonsAddandRemove\">\r\n                \r\n                <Button onClick={addProcedure} variant=\"primary\" size=\"lg\">+</Button>{' '}\r\n                <Button onClick={removeProcedure} variant=\"primary\" size=\"lg\">-</Button>{' '}\r\n            </div>\r\n            {quant.map((valor,index)=>\r\n            <div key={index}>\r\n                {`Procedimento ${index}:`}\r\n                <Form.Group className=\"formInicio\" controlId=\"name\">\r\n                    <Form.Label>Digite o item da máquina</Form.Label>\r\n                    <Form.Control value={procedures[index].item} onChange={(event)=>{\r\n                        console.log(event.target.value)\r\n                        var array = [];\r\n                        array = [...procedures];\r\n                        array[index].item = event.target.value;\r\n                        setProcedures(array);\r\n                    }} type=\"text\" placeholder=\"Nome\"/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Digite o location da máquina</Form.Label>\r\n                    <Form.Control value={procedures[index].location} onChange={(event)=>{\r\n                        var array = [];\r\n                        array = [...procedures];\r\n                        array[index].location = event.target.value;\r\n                        setProcedures(array);\r\n                    }}  type=\"text\" placeholder=\"Nome\"/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Digite o descrição da máquina</Form.Label>\r\n                    <Form.Control value={procedures[index].description} onChange={(event)=>{\r\n                        var array = [];\r\n                        array = [...procedures];\r\n                        array[index].description = event.target.value;\r\n                        setProcedures(array);\r\n                    }}  type=\"text\" placeholder=\"Nome\"/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Digite o point da máquina</Form.Label>\r\n                    <Form.Control value={procedures[index].point} onChange={(event)=>{\r\n                        var array = [];\r\n                        array = [...procedures];\r\n                        array[index].point = event.target.value;\r\n                        setProcedures(array);\r\n                    }}  type=\"text\" placeholder=\"Nome\"/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Digite o metodo da máquina</Form.Label>\r\n                    <Form.Control value={procedures[index].method} onChange={(event)=>{\r\n                        var array = [];\r\n                        array = [...procedures];\r\n                        array[index].method = event.target.value;\r\n                        setProcedures(array);\r\n                    }}  type=\"text\" placeholder=\"Nome\"/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Digite o condição da máquina</Form.Label>\r\n                    <Form.Control value={procedures[index].condition} onChange={(event)=>{\r\n                        var array = [];\r\n                        array = [...procedures];\r\n                        array[index].condition = event.target.value;\r\n                        setProcedures(array);\r\n                    }}  type=\"text\" placeholder=\"Nome\"/>\r\n                </Form.Group>\r\n            </div>\r\n            \r\n            )}\r\n            <Button onClick={updateMachine} variant=\"primary\" size=\"sm\">Alterar</Button>{' '}\r\n        </Form>\r\n    </div>)\r\n\r\n\r\n}","import React,{useState,useEffect} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport \"./styles.css\"\r\nexport default function ResultScreen(){\r\n\r\n    \r\n    \r\n    const [whys,setWhys] = useState([]);\r\n    const [initialDate,setInitialDate] = useState(new Date());\r\n    const [finalDate,setFinalDate] = useState(new Date());\r\n    const [id,setId] = useState('');\r\n    const [searchPress,setSearchPress] = useState(false);\r\n    const [field,setField] = useState(\"Meio ambiente\");\r\n\r\n\r\n\r\n    async function handlerSearchButton(){\r\n        const response = await fetch(\r\n            `http://52.23.184.13:3333/why/indexDates?initialDate=${initialDate}&finalDate=${finalDate}&id=${id}&field=${field}`\r\n            ,{\r\n        headers:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method:'GET',\r\n    });\r\n    const data = await response.json();\r\n    console.log(data.length)\r\n    if(data.length!==0 && response.status === 200){\r\n        setSearchPress(true);\r\n    }\r\n\r\n    console.log(data);\r\n    setWhys(data);\r\n    }\r\n    async function handlerDeleteButton(idDelete){\r\n        const response = await fetch(\r\n            `http://52.23.184.13:3333/why/delete/${idDelete}`\r\n            ,{\r\n        headers:{\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method:'DELETE',\r\n    });\r\n    const arrayDelele = whys.filter((value)=>value[\"_id\"]!==idDelete);\r\n    setWhys(arrayDelele);\r\n    console.log(await response.json());\r\n    handlerSearchButton();\r\n    }\r\n    return(\r\n        <div>\r\n            <Form>\r\n                <Form.Group>\r\n                <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                            <Button variant=\"primary\">ID</Button>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control placeholder=\"Deixe em branco para não aplicar o filtro\" value={id} onChange={(e)=>setId(e.target.value)} type=\"text\">\r\n\r\n                        </Form.Control>\r\n                </InputGroup>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                            <Button variant=\"primary\">Data inicial</Button>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control value={initialDate} onChange={(e)=>setInitialDate(e.target.value)} type=\"date\">\r\n\r\n                        </Form.Control>\r\n                    </InputGroup>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                            <Button variant=\"primary\">Data final</Button>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control value={finalDate} onChange={(e)=>setFinalDate(e.target.value)} type=\"date\">\r\n\r\n                        </Form.Control>\r\n                    </InputGroup>\r\n                    <Form.Group controlId=\"name\">                \r\n            <Form.Control value={field} onChange={(e)=>{console.log(e.target.value);setField(e.target.value)}} as=\"select\" custom> \r\n                <Form.Label >Escolha a área</Form.Label>                          \r\n                            <option> Meio ambiente </option> \r\n                            <option> BBlend </option>\r\n                            <option> Packaging 501  </option>\r\n                            <option> Packaging 502 </option>\r\n                            <option> Packaging 503  </option>\r\n                            <option> Packaging 511  </option>\r\n                            <option> Packaging 512  </option>\r\n                            <option> Packaging 561 </option> \r\n                            <option> Packaging 562 </option> \r\n                            <option> Processo cerveja </option>\r\n                            <option> Utilidades </option> \r\n                            <option> Xaroparia </option> \r\n                </Form.Control>\r\n            </Form.Group>\r\n                    \r\n                    <Button onClick={handlerSearchButton} variant=\"primary\">Pesquisar</Button>\r\n                </Form.Group>\r\n            \r\n            </Form>\r\n            <Accordion defaultActiveKey=\"00\">\r\n                {searchPress && whys.map((value,index)=>\r\n                (\r\n                    <Card key={`${index}`} >\r\n                    <Card.Header>\r\n                        <div className=\"cardHeader\">\r\n                            <Accordion.Toggle eventKey={`${index}`} as={Button} variant=\"link\" >                              \r\n                                {value.userId}\r\n                            </Accordion.Toggle>\r\n                            <Button className=\"deleteButton\" onClick={()=>{handlerDeleteButton(value[\"_id\"])}} variant=\"danger\" size=\"sm\">Excluir</Button>\r\n                        </div>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey={`${index}`}>\r\n                        <Card.Body>   \r\n                              <p>Descrição da anomalia: {value.descriptionAnomaly}</p>\r\n                              <p>Correção: {value.corrective}</p>\r\n                              <p>Ordem de manutenção: {value.maintenanceOrder}</p>\r\n                              {value.whys.map((value,index)=><p key={`${index}`}>Porque {value.number}: {value.description}</p>)}                              \r\n                              <p>Causa: {value.cause}</p>\r\n                              <p>Deterioração: {value.deterioration}</p>\r\n                              <p>Comentário: {value.comment}</p>\r\n                              <p>Notas de manutenção: {value.maintenanceNotes}</p>\r\n                        </Card.Body>\r\n                        \r\n                    </Accordion.Collapse>\r\n                    \r\n                </Card>\r\n                ))}\r\n                \r\n            \r\n            </Accordion>\r\n\r\n\r\n        \r\n        \r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react';\r\nimport './styles.css';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport smart from './../../assets/smart.png'\r\nimport ambev from './../../assets/ambev.png'\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport cookieObj from '../../utils/cookietoObject';\r\nfunction LoginScreen() {\r\n  const [userId,setUserId] = useState('');\r\n  const [field,setField] = useState(\"Meio ambiente\");\r\n  const [password,setPassword] = useState('');\r\n  \r\n  let history = useHistory();\r\n  async function handlerButtonLogin(){\r\n    sessionStorage.removeItem('admin');\r\n    \r\n    const data = {userId,password,field};\r\n    console.log(JSON.stringify(data))\r\n    const response = await fetch(`http://52.23.184.13:3333/session/login`,{\r\n    \r\n    headers:{     \r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n\r\n    },\r\n    body: JSON.stringify(data),\r\n    method:'POST', \r\n    credentials: 'include',\r\n    });\r\n    console.log(await response.json());\r\n    if(response.status === 200){\r\n      //const cookieObject = cookieObj(document.cookie);\r\n      //console.log(cookieObject);\r\n      //if(cookieObject[1][\"admin\"]==\"true\"){\r\n        sessionStorage.setItem('admin',\"true\");\r\n        history.replace('/mainScreen');\r\n        console.log(response.headers);\r\n\r\n     // }else{\r\n        //colocar algo para mostrar q o usuário não possui authenticação \r\n      //}\r\n    }else{\r\n      //colocar algo para mostrar que o usuário não existe\r\n    }\r\n\r\n  }\r\n  \r\n  return (\r\n    <body>\r\n      <div className=\"header\">\r\n      <img className=\"image\"  src={smart} alt=\"smartMaitenance\"/>\r\n        \r\n      </div>\r\n      <div className=\"inputsS\">\r\n        \r\n         <InputGroup className=\"input\" size=\"lg\">\r\n            <FormControl\r\n              placeholder=\"id\"\r\n              onChange={(e)=>{setUserId(e.target.value)}}\r\n              value={userId}\r\n            />\r\n          </InputGroup>\r\n          <InputGroup className=\"input\"size=\"lg\">\r\n            <FormControl\r\n              value={password}\r\n              placeholder=\"senha\"\r\n              onChange={(e)=>{setPassword(e.target.value)}}\r\n            />\r\n          </InputGroup>\r\n          <Form.Control className=\"input\" value={field} onChange={(e)=>{console.log(e.target.value);setField(e.target.value)}} as=\"select\"> \r\n                                  \r\n                            <option>Meio ambiente</option> \r\n                            <option>BBlend</option>\r\n                            <option>Packaging 501</option>\r\n                            <option>Packaging 502</option>\r\n                            <option>Packaging 503</option>\r\n                            <option>Packaging 511</option>\r\n                            <option>Packaging 512</option>\r\n                            <option>Packaging 561</option> \r\n                            <option>Packaging 562</option> \r\n                            <option>Processo cerveja</option>\r\n                            <option>Utilidades</option> \r\n                            <option>Xaroparia</option> \r\n            </Form.Control>\r\n          <Button className=\"loginButton \"  onClick={handlerButtonLogin} variant=\"outline-primary\" size=\"lg\">Entrar</Button>\r\n        {\r\n           //<Button onClick={()=>{handlerButtonClick('operario')}} variant=\"outline-primary\" size=\"lg\">Cadastro de operadores</Button>\r\n        } \r\n       \r\n      </div>\r\n     \r\n       \r\n          \r\n      <div className=\"button\">\r\n          <div className=\"footer\">\r\n      \r\n            <img className=\"imageAmbev\"  src={ambev} alt=\"smartMaitenance\"/>\r\n         \r\n          </div>\r\n     \r\n    </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React from 'react';\r\nimport {Route,Redirect} from 'react-router-dom';\r\n\r\nexport default function PrivateRoute({children}){\r\n    let auth = sessionStorage.getItem('admin');\r\n    console.log(auth)\r\n    return(\r\n        <Route\r\n            render={({location})=>auth == \"true\" ? children: <Redirect to={{pathname:\"/\",state:{from:location}}}/>}\r\n        />\r\n    )\r\n}","import React from 'react';\r\nimport {HashRouter,Route,Switch} from 'react-router-dom';\r\nimport MainScreen from './pages/mainscreen/MainScreen'\r\nimport UserScreen from './pages/usersScreen/UserScreen'\r\nimport MaquinaScreen from './pages/maquinaScreen/MaquinaScreen'\r\nimport AddScreen from './pages/addScreen'\r\nimport CsvScreen from './pages/csvScreen'\r\nimport InfoScreen from './pages/infoScreen'\r\nimport EditScreen from './pages/editScreen'\r\nimport ResultScreen from './pages/resultScreen'\r\nimport LoginScreen from './pages/loginScreen'\r\nimport PrivateRoute from './utils/PrivateRoute'\r\nexport default function Routes(){\r\n    return(\r\n        <HashRouter >\r\n            <Switch >\r\n                <Route path=\"/\"  exact component={LoginScreen}/>\r\n                <PrivateRoute path=\"/mainScreen\">\r\n                    <MainScreen/>\r\n                </PrivateRoute>\r\n                <PrivateRoute path=\"/users\">\r\n                    <UserScreen/>\r\n                </PrivateRoute>\r\n                <PrivateRoute path=\"/maquinas\">\r\n                    <MaquinaScreen/>\r\n                </PrivateRoute>\r\n                <PrivateRoute path=\"/add\">\r\n                    <AddScreen/>\r\n                </PrivateRoute>\r\n                <PrivateRoute  path=\"/info\">\r\n                    <InfoScreen/>\r\n                </PrivateRoute>\r\n                <PrivateRoute  path=\"/edit\">\r\n                    <EditScreen/>\r\n                </PrivateRoute>\r\n                <PrivateRoute  path=\"/result\">\r\n                    <ResultScreen/>\r\n                </PrivateRoute>\r\n                <PrivateRoute  path=\"/csv\">\r\n                    <CsvScreen/>\r\n                </PrivateRoute>             \r\n            </Switch>\r\n        </HashRouter>\r\n    )\r\n}","import React from 'react';\r\nimport Routes from './Routes';\r\nimport \"./index.css\"\r\nexport default function App(){\r\n    return(\r\n        <div className=\"app\">\r\n            <Routes/>\r\n        </div>\r\n    )\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}